{"version":3,"sources":["app/slice.js","features/launcher/launcherSlice.js","features/home/homeSlice.js","app/store.js","app/constants.js","app/Navigation.js","features/launcher/Launcher.js","api/api.MIMS.js","api/api.IMCS.js","api/index.js","utils/utilUi.js","features/home/HomeAside.js","features/home/HomeHeader.js","components/Poster.js","features/home/HomeContents.js","features/home/Home.js","features/category/Category.js","features/title/Title.js","app/History.js","native/NativeSend.js","features/my/My.js","features/setting/Setting.js","features/schedule/Schedule.js","app/router.js","components/Toast.js","components/Modal.js","app/Portal.js","native/nativeReceive.js","App.js","serviceWorker.js","index.js"],"names":["deviceInfoSlice","createSlice","name","initialState","model","mac","reducers","setDeviceInfo","state","action","payload","userInfoSlice","age","setUserInfo","actions","launcherExampleSlice","launcherState1","launcherState2","setLauncherState","homeExampleSlice","homeState1","homeState2","setHomeState","store","configureStore","reducer","deviceInfo","userInfo","launcherExample","homeExample","CONSTANTS","RESOLUTION_FHD","window","innerWidth","this","selectedClass","focusClass","focusHistory","params","direction","KEY_CODE","key","prevent","move","navigation","focusSection","focusItem","history","push","forEach","layer","sections","section","document","getElementById","id","setItems","body","onkeydown","event","keyCode","onkeyup","preventDefault","enter","back","items","axis","y","x","parent","children","length","result","convertMultiArray","setStore","switchFocus","options","start","cols","total","count","Math","ceil","i","splice","inputTag","getElementsByTagName","classList","remove","blur","add","focus","findSection","go","idx","findIndex","existing","find","exist","index","target","directions","focusSectionCopy","Map","toJS","findNextSection","next","prevSection","selected","leave","mode","currentOffsetLeft","offsetLeft","axisX","item","entry","nextRow","loop","Launcher","launcher","useSelector","useState","close","setClose","useEffect","console","log","Navigation","set","right","down","left","launcherSliding","viewport","container","containerX","parseInt","getComputedStyle","transform","split","trim","center","parentWidth","getBoundingClientRect","width","parentX","itemX","itemWidth","distance","floor","style","abs","className","onTransitionEnd","History","test","closeCallback","backgroundImage","apiMIMS","getMainPanelInterlockingInfo","callback","base","sa_id","stb_mac","app_type","panel_id","http","get","domain","MIMS","headers","Accept","response","apiIMCS","getVodList","cache","CMD","IMCS","field","RESULT_TYPE","ID","NAME","TYPE","IMG_URL","IMG_FILE_NAME","PARENT_CAT_ID","AUTH_YN","CHA_NUM","CAT_LEVEL","PRICE_YN","EXIST_SUB_CAT","PR_INFO","RUNTIME","IS_51_CH","IS_NEW","IS_UPDATE","IS_HOT","IS_CAPTION","IS_HD","IS_CONTINOUS_PLAY","POINT","SUB_CNT","CLOSE_YN","SVOD_YN","SERVICE_GB","FILTER_GB","PPS_YN","CAT_DESC","IS_ORDER","NO_CACHE","ANIMATION_IMG_FILE","PPM_YN","PPM_PROD_ID","TEST_SBC","POINT_COUNT","POSTER_URL_NEW","POSTER_IMG_URL","IMG_FILE_NAME_H","IMG_FILE_NAME_V","POINT_I30","PRICE","IS_FH","IS_CAT_FH","IS_UHD","IS_CAT_UHD","NSC_GB","WATCHA_POINT","CINE_AVG_POINT","CHANNEL_NUM","SPECIAL_CAT_TYPE","KIDS_GRADE","CATEGORY_SUB_NAME","ORDER_FLAG","SER_ALBUM_ID","NEW_IMAGE_URL","MAIN_IMG_FILE","LOGO_IMAGE_FILE","data","converter","reduce","array","imgUrl","imgName","title","getVodDetail","FLAG","MESSAGE","POSTER_URL","STILL_URL","CONTS_IMAGE_URL","CAPTION_URL","VOD_SERVER1","VOD_SERVER2","VOD_SERVER3","VOD_SERVER1_TYPE","VOD_SERVER2_TYPE","VOD_SERVER3_TYPE","POSTER_URL_OLD","SUPER_ALBUM_ID","IPV6_VOD_SERVER1","IPV6_VOD_SERVER2","IPV6_VOD_SERVER3","ALBUM_ID","ALBUM_NAME","SERIES_DESC","EVENT_INFO","TERR_YN","TERR_ED_DATE","ONAIR_DATE","RELEASE_DATE","COUNTRY","DIRECTOR","PRODUCER","STARRING_ACTOR","ACTOR","VOICE_ACTOR","STUDIO","GENRE_LARGE","GENRE_MID","GENRE_SMALL","SMI_LANGUAGE","ADD_INFO_TYPE","ADD_INFO","SUMMARY1","SUMMARY2","PREVIEW_FLAG","IS_HDR","WATCHA_COUNT","COMMENT_CNT","CINE21_ID","CINE21_POINT","CINE21_COUNT","RESERVE_VIEW_DATE","RESERVE_DELAY_YN","POSTER_IMG_H","POSTER_IMG_V","POSTER_IMG_R","STILL_IMAGE","BACK_IMAGE","LOGO_IMAGE","GENRE_TYPE","SUBTITLE","UHD_YN","CAPTION_YN","DUBBING_YN","INDEX_SVC_FLAG","DOLBY_YN","IMDB_YN","IMDB_POINT","PREV_RESULT_TYPE","ORIGIN_ALBUM_ID","PREV_ALBUM_ID","PREV_ALBUM_NAME","PREV_RUNTIME","PREV_STILL_IMAGE","VOD_FILE_NAME","VOD_FILE_SIZE","CAP_FILE_NAME","CAP_FILE_SIZE","release","dayjs","format","genre","runtime","substr","actor","director","summary","axios","create","baseUR","adapter","cacheAdapterEnhancer","defaults","enabledByDefault","limit","Object","keys","rows","pop","map","row","lastIndexOf","value","match","api","MINS","sliding","prop","type","clientWidth","propStyle","propMarginLeft","marginLeft","propMarginRight","marginRight","propWidth","propOffsetLeft","singleType","page","pageType","timer","const","setTimer","time","clearTimer","setTimeout","clearTimeout","React","memo","PosterHorizontal","PosterVertical","Poster","tag","createElement","render","props","currentCategory","Home","homeContents","setHomeContents","currentItem","setCurrentItem","activeGnb","setActiveGnb","homeBody","useRef","utilUI","up","list","addSection","switchDirection","current","homeSliding","dataset","Portal","mount","axisY","cssText","firstElementChild","insertBefore","lastElementChild","firstChild","ontransitionend","getAttribute","append","PARAM","ref","Category","goBack","Title","createLayer","contents","unmount","portalId","removeLayer","historyArray","path","native","stack","replace","method","tvExt","ApexMessage","send","dispatch","assign","My","NativeSend","setHistoryBack","Setting","Routes","exact","component","Toast","Modal","placeholder","portalType","setAttribute","appendChild","ReactDOM","unmountComponentAtNode","nativeReceive","App","useHistory","init","Fragment","route","Boolean","location","hostname","a","StrictMode","basename","process","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kUAEMA,EAAkBC,YAAY,CAChCC,KAAM,aACNC,aAAc,CACVC,MAAO,GACPC,IAAK,IAETC,SAAU,CACNC,cAAe,SAACC,EAAOC,GACnB,OAAO,2BAAID,GAAUC,EAAOC,aAKlCC,EAAgBV,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACVD,KAAM,GACNU,IAAK,IAETN,SAAU,CACNO,YAAa,SAACL,EAAOC,GACjB,OAAO,2BAAID,GAAUC,EAAOC,aAM1BG,GADiBb,EAAgBc,QAAjCP,cACeI,EAAcG,QAA7BD,aC3BRE,EAAuBd,YAAY,CACrCC,KAAM,kBACNC,aAAc,CACVa,eAAgB,GAChBC,eAAgB,IAEpBX,SAAU,CACNY,iBAAkB,SAACV,EAAOC,GACtB,OAAO,2BAAID,GAAUC,EAAOC,aAOzBK,GAFmBA,EAAqBD,QAAzCI,iBAECH,GCfTI,EAAmBlB,YAAY,CACjCC,KAAM,cACNC,aAAc,CACViB,WAAY,GACZC,WAAY,IAEhBf,SAAU,CACNgB,aAAc,SAACd,EAAOC,GAClB,OAAO,2BAAID,GAAUC,EAAOC,aAOzBS,GAFeA,EAAiBL,QAAjCQ,aAECH,GCFAI,EATDC,YAAe,CAC5BC,QAAS,CACFC,WAAY1B,EAAgByB,QAC5BE,SAAUhB,EAAcc,QACxBG,gBAAiBb,EAAqBU,QACtCI,YAAaV,EAAiBM,W,OCPvBK,EAJG,CACdC,eAAgBC,OAAOC,YAAc,M,wCCye1B,M,WAneX,aAAe,oBAEXC,KAAKC,cAAgB,WACrBD,KAAKE,WAAa,QAClBF,KAAKG,aAAe,K,uDAGbC,GACP,IAAIC,EAAY,GAEhB,OAAQD,EAAOE,UACX,KAAK,GACDD,EAAY,KACZ,MACJ,KAAK,GACDA,EAAY,OACZ,MACJ,KAAK,GACDA,EAAY,OACZ,MACJ,KAAK,GACDA,EAAY,QAMpBL,KAAKO,IAAMF,EAEPL,KAAKO,MAAQP,KAAKQ,SAClBR,KAAKS,KAAKJ,K,0BAOdD,GAAS,IAAD,OAERJ,KAAKU,WAAa,GAClBV,KAAKW,aAAe,KACpBX,KAAKY,UAAY,KACjBZ,KAAKa,QAAU,GACfb,KAAKO,IAAM,GACXP,KAAKQ,SAAU,EAEfR,KAAKU,WAAWI,KAAKV,GAErBJ,KAAKU,WAAWK,SAAQ,SAAAC,GACpBA,EAAMC,SAASF,SAAQ,SAAAG,GACfC,SAASC,eAAeF,EAAQG,KAChC,EAAKC,SAASJ,SAK1BC,SAASI,KAAKC,UAAY,SAAAC,GACtB,IAAIpB,EAAY,GAEhB,OAAQoB,EAAMC,SACV,KAAK,GACDrB,EAAY,KACZ,MACJ,KAAK,GACDA,EAAY,OACZ,MACJ,KAAK,GACDA,EAAY,OACZ,MACJ,KAAK,GACDA,EAAY,QAMpB,EAAKE,IAAMF,EAEP,EAAKE,MAAQ,EAAKC,SAClB,EAAKC,KAAKJ,IAIlBc,SAASI,KAAKI,QAAU,SAAAF,GACE,KAAlBA,EAAMC,SACND,EAAMG,iBACN,EAAKjB,aAAakB,OAAS,EAAKlB,aAAakB,MAAM,EAAKlB,eAC/B,IAAlBc,EAAMC,UACbD,EAAMG,iBACN,EAAKjB,aAAamB,MAAQ,EAAKnB,aAAamB,W,+BAU/CZ,EAASa,GAGd,IAAIC,EAFJd,EAAO,MAAYa,EAKfC,EADAd,EAAO,KACA,CACHe,EAAGf,EAAQc,KAAKC,EAChBC,EAAGhB,EAAQc,KAAKE,GAGb,CACHD,EAAG,EACHC,EAAG,GAIXhB,EAAO,KAAWc,I,+BAObd,GACL,IAAMiB,EAAShB,SAASC,eAAeF,EAAQG,IACzCe,EAAQ,YAAOD,EAAOC,UAE5B,GAAIA,EAASC,OAAS,EAAG,CAErB,IAAIC,EAAStC,KAAKuC,kBAAkBrB,EAASkB,GAG7CpC,KAAKwC,SAAStB,EAASoB,GAGnBtC,KAAKG,cAAgBe,EAAQG,KAAOrB,KAAKG,aAAakB,IACtDrB,KAAKW,aAAeO,EACpBlB,KAAKW,aAAaqB,KAAOhC,KAAKG,aAAa6B,KAC3ChC,KAAKyC,cAGLzC,KAAKG,aAAe,MAGhBe,EAAQwB,SAAWxB,EAAQwB,QAAQC,OAA+B,OAAtB3C,KAAKW,eACjDX,KAAKW,aAAeO,EACpBlB,KAAKW,aAAaqB,KAAOd,EAAQwB,QAAQC,MACzC3C,KAAKyC,kB,wCAYHvB,EAASa,GACvB,IAAIO,EAAS,GAEb,GAAIpB,EAAQwB,SAAWxB,EAAQwB,QAAQE,KAKnC,IAJA,IAAMA,EAAO1B,EAAQwB,QAAQE,KACvBC,EAAQd,EAAMM,OACdS,EAAQC,KAAKC,KAAKH,EAAQD,GAEvBK,EAAI,EAAGA,EAAIH,EAAOG,IACvBJ,EAAQ,GAAKP,EAAOxB,KAAKiB,EAAMmB,OAAO,EAAGN,SAG7CN,EAAS,CAACP,GAGd,OAAOO,I,oCAOP,IAAMa,EAAWhC,SAASiC,qBAAqB,SAAS,GAGxDpD,KAAKY,WAAaZ,KAAKY,UAAUyC,UAAUC,OAAOtD,KAAKE,YACvDF,KAAKY,YAAcuC,GAAYnD,KAAKY,UAAU2C,OAG9CvD,KAAKY,UAAYZ,KAAKW,aAAaoB,MAAM/B,KAAKW,aAAaqB,KAAKC,GAAGjC,KAAKW,aAAaqB,KAAKE,GAC1FlC,KAAKY,UAAUyC,UAAUC,OAAOtD,KAAKC,eACrCD,KAAKY,UAAUyC,UAAUG,IAAIxD,KAAKE,YAClCF,KAAKY,YAAcuC,GAAYnD,KAAKY,UAAU6C,QAC9CzD,KAAKW,aAAaC,UAAYZ,KAAKY,UACnCZ,KAAKW,aAAa8C,OAASzD,KAAKW,aAAa8C,MAAMzD,KAAKW,gB,kCAQhDU,GACR,IAAIiB,EAAS,GAUb,OARAtC,KAAKU,WAAWK,SAAQ,SAAAC,GACpBA,EAAMC,SAASF,SAAQ,SAAAG,GACfA,EAAQG,KAAOA,IACfiB,EAASpB,SAKdoB,I,yBAQRjB,EAAIW,GACHhC,KAAKW,aAAeX,KAAK0D,YAAYrC,GAGjCW,IACAhC,KAAKW,aAAaqB,KAAO,CACrBC,EAAGD,EAAKC,EACRC,EAAGF,EAAKE,IAIhBlC,KAAKyC,gB,kCAOGrC,GAAS,IAAD,OAChBJ,KAAKa,QAAQC,KAAKd,KAAKW,cACvBX,KAAKU,WAAWI,KAAKV,GAErBA,EAAOa,SAASF,SAAQ,SAAAG,GACpB,EAAKI,SAASJ,GAGVA,EAAQwB,SAAWxB,EAAQwB,QAAQC,OACnC,EAAKgB,GAAGzC,EAAQG,S,kCAShBA,GACR,IAAMR,EAAUb,KAAKa,QAAQb,KAAKa,QAAQwB,OAAO,GAC3CuB,EAAM5D,KAAKU,WAAWmD,WAAU,SAAA7C,GAClC,OAAOA,EAAMK,KAAOA,KAGxBrB,KAAKU,WAAWwC,OAAOU,EAAK,GAC5B5D,KAAKa,QAAQqC,OAAOlD,KAAKa,QAAQwB,OAAO,EAAG,GAC3CrC,KAAK2D,GAAG9C,EAAQQ,M,iCAQTA,EAAIJ,GAAW,IAAD,OACjB6C,EAAW9D,KAAKU,WAAWqD,MAAK,SAAA/C,GAChC,OAAOA,EAAMK,KAAOA,KAGxBJ,EAASF,SAAQ,SAAAG,GAEb4C,EAAS7C,SAASF,SAAQ,SAACiD,EAAOC,GAC1BD,EAAM3C,KAAOH,EAAQG,IACrByC,EAAS7C,SAASiC,OAAOe,EAAO,MAIxCH,EAAS7C,SAASH,KAAKI,GACvB,EAAKI,SAASJ,Q,oCAQRG,M,+BAaLA,GACL,IAAM6C,EAASlE,KAAK0D,YAAYrC,GAC1Bc,EAAShB,SAASC,eAAe8C,EAAO7C,IACxCe,EAAQ,YAAOD,EAAOC,UAE5B,GAAIA,EAASC,OAAS,EAAG,CACrB,IAAIC,EAAStC,KAAKuC,kBAAkB2B,EAAQ9B,GAC5CpC,KAAKwC,SAAS0B,EAAQ5B,M,iCAQnB6B,GAAa,IAAD,OAEnBnE,KAAKoE,iBAAmBC,YAAIrE,KAAKW,cAAc2D,OAE/CH,EAAWpD,SAAQ,SAAAV,GACgC,OAA3C,EAAKM,aAAaN,UAAUA,KAC5B,EAAKM,aAAaN,UAAUA,GAAa,W,kCASpCL,KAAK0D,YAAY1D,KAAKoE,iBAAiB/C,IAC7ChB,UAAYL,KAAKoE,iBAAiB/D,UAEzCL,KAAKoE,iBAAmB,O,sCAQZ/C,EAAIhB,GACHL,KAAK0D,YAAYrC,GACvBhB,UAAYA,I,2BAOlBA,GAAY,IAAD,OAINkE,EAAkB,WACpB,IAAMC,EAAO,EAAK7D,aAAaN,WAAa,EAAKM,aAAaN,UAAUA,GAGlEoE,EAAc,EAAK9D,aAEzB,GAAI6D,GAAQrD,SAASC,eAAeoD,EAAKnD,KAAuB,oBAATmD,EAAqB,CAOxE,OALAA,EAAKE,UAAY,EAAK9D,UAAUyC,UAAUG,IAAI,EAAKvD,eAGnD,EAAKU,aAAagE,OAAS,EAAKhE,aAAagE,MAAM,EAAKhE,cAEhD,EAAKA,aAAaN,UAAUuE,MAEhC,IAAK,SACD,IAAIC,EAAoB,EAAKlE,aAAaC,UAAUkE,WAChDC,EAAQ,EAGZ,EAAKpE,aAAe,EAAK+C,YAAYc,EAAKnD,IAE1C,EAAKV,aAAaoB,MAAM,GAAGhB,SAAQ,SAACiE,EAAMf,GAKtC,OAJIe,EAAKF,YAAcD,IACnBE,EAAQd,GAGLc,KAGX,EAAKpE,aAAaqB,KAAKE,EAAI6C,EAC3B,MACJ,IAAK,OACD,MACJ,QAEI,EAAKpE,aAAe,EAAK+C,YAAYc,EAAKnD,IAIlD,EAAKV,aAAa8D,YAAlB,2BACO,EAAK9D,aAAa8D,aADzB,kBAEK,EAAKlE,IAAMkE,IAIhB,EAAK9D,aAAasE,OAAS,EAAKtE,aAAasE,MAAM,EAAKtE,cACxD,EAAK8B,kBACkB,oBAAT+B,GACd,EAAK7D,aAAaN,UAAUA,GAAW,EAAKM,eAK9CuE,EAAUlF,KAAKW,aAAa+B,SAAW1C,KAAKW,aAAa+B,QAAQwC,QACjEC,EAAOnF,KAAKW,aAAa+B,SAAW1C,KAAKW,aAAa+B,QAAQyC,KAEpE,OAAQ9E,GACJ,IAAK,QACGL,KAAKW,aAAaqB,KAAKE,EAAIlC,KAAKW,aAAaoB,MAAM/B,KAAKW,aAAaqB,KAAKC,GAAGI,OAAS,GACtFrC,KAAKW,aAAaqB,KAAKE,GAAK,EAC5BlC,KAAKyC,eAEDyC,EAEIlF,KAAKW,aAAaqB,KAAKC,EAAIjC,KAAKW,aAAaoB,MAAMM,OAAS,IAC5DrC,KAAKW,aAAaqB,KAAKC,GAAK,EAC5BjC,KAAKW,aAAaqB,KAAKE,EAAI,EAC3BlC,KAAKyC,eAEF0C,GAEPnF,KAAKW,aAAaqB,KAAKE,EAAI,EAC3BlC,KAAKyC,eAEL8B,IAGR,MACJ,IAAK,OACGvE,KAAKW,aAAaqB,KAAKE,EAAI,GAC3BlC,KAAKW,aAAaqB,KAAKE,GAAK,EAC5BlC,KAAKyC,eAEDyC,EAEIlF,KAAKW,aAAaqB,KAAKC,EAAI,IAC3BjC,KAAKW,aAAaqB,KAAKC,GAAK,EAC5BjC,KAAKW,aAAaqB,KAAKE,EAAIlC,KAAKW,aAAaoB,MAAM/B,KAAKW,aAAaqB,KAAKC,GAAGI,OAAS,EACtFrC,KAAKyC,eAOT8B,IAGR,MACJ,IAAK,OACGvE,KAAKW,aAAaqB,KAAKC,EAAIjC,KAAKW,aAAaoB,MAAMM,OAAS,GAC5DrC,KAAKW,aAAaqB,KAAKC,GAAK,EAC5BjC,KAAKyC,eAEL8B,IAEJ,MACJ,IAAK,KACGvE,KAAKW,aAAaqB,KAAKC,EAAI,GAC3BjC,KAAKW,aAAaqB,KAAKC,GAAK,EAC5BjC,KAAKyC,eAEL8B,S,cC7dhB3E,EAAUC,eAEV,iCAGA,iCAGJ,IA6OeuF,EA7OE,WAEb,IAAMC,EAAWC,aAAY,SAAAhH,GAAK,OAAIA,EAAMoB,mBAFzB,EAIO6F,mBAAS,IAJhB,mBAIZC,EAJY,KAILC,EAJK,KAMnBC,qBAAU,WAENC,QAAQC,IAAIP,GAEZQ,EAAWC,IAAI,CACXzE,GAAI,WACJJ,SAAU,CACN,CACII,GAAI,kBACJhB,UAAW,CACP0F,MAAO,CACH1E,GAAI,oBAER2E,KAJO,WAKHP,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvByB,KAbJ,WAcQ2D,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvB,CACIgB,GAAI,mBACJhB,UAAW,CACP4F,KAAM,CACF5E,GAAI,mBAER0E,MAAO,CACH1E,GAAI,qBAER2E,KAPO,WAQHP,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvByB,KAhBJ,WAiBQ2D,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvB,CACIgB,GAAI,oBACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErB7B,UAAW,CACP4F,KAAM,CACF5E,GAAI,oBAER0E,MAAO,CACH1E,GAAI,sBAER2E,KAPO,WAQHP,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvBoD,MAnBJ,SAmBUvC,GACFgF,EAAgBhF,EAAS,mBAE7BY,KAtBJ,WAuBQ2D,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvB,CACIgB,GAAI,qBACJhB,UAAW,CACP4F,KAAM,CACF5E,GAAI,qBAER2E,KAJO,WAKHP,EAAS,CACLnH,OAAO,EACP+B,UAAW,WAIvBoD,MAbJ,SAaUvC,GACFgF,EAAgBhF,EAAS,mBAE7BY,KAhBJ,WAiBQ2D,EAAS,CACLnH,OAAO,EACP+B,UAAW,gBAMhC,IAQH,IAAM6F,EAAkB,SAAChF,EAASgD,GAC9B,IAAMiC,EAAWrG,OAAOC,WAClBqG,EAAYjF,SAASC,eAAe8C,GACpCmC,EAAaC,SAASxG,OAAOyG,iBAAiBH,GAAWI,UAAUC,MAAM,KAAK,GAAGC,QACjFC,EAASR,EAAW,EAAIC,EAAUtB,WAElC3C,EAAShB,SAASC,eAAeF,EAAQG,IACzCuF,EAAczE,EAAO0E,wBAAwBC,MAC7CC,EAAU5E,EAAO2C,WAEjBE,EAAO9D,EAAQN,UAAUiG,wBACzBG,EAAQhC,EAAKiB,KACbgB,EAAYjC,EAAK8B,MACjBI,EAAWP,EAAS5D,KAAKoE,MAAMH,EAAQC,EAAY,GAErDD,EAAQC,EAAY,EAAIN,EACpBzF,EAAQa,MAAMb,EAAQc,KAAKC,GAAGf,EAAQa,MAAMb,EAAQc,KAAKC,GAAGI,OAAO,GAAGwE,wBAAwBZ,KAAOE,EACrGC,EAAUgB,MAAMZ,UAAhB,qBAA0CH,EAAaa,EAAvD,OAEAd,EAAUgB,MAAMZ,UAAhB,sBAA2CI,GAAeT,EAAWY,GAArE,OAGAhE,KAAKsE,IAAIhB,GAActD,KAAKsE,IAAIH,IAAgC,IAAnBhG,EAAQc,KAAKE,EAC1DkE,EAAUgB,MAAMZ,UAAhB,gBAEAJ,EAAUgB,MAAMZ,UAAhB,qBAA0CH,EAAaa,EAAvD,QAaZ,OACI,yBAAKI,UAAS,6BAAwB9B,EAAMlH,MAAQ,QAAU,IAAMiJ,gBAAiB,kBATnE,WAClB,GAAwB,SAApB/B,EAAMnF,UACN,OAAOmH,GAAQ1G,KAAK,QAAS,CAAC2G,KAAM,IACT,SAApBjC,EAAMnF,WACbsF,QAAQC,IAAI,4BAK2E8B,KAEvF,yBAAKJ,UAAU,iBAAiBjG,GAAG,iBAAiB+F,MAAO,CAACZ,UAAW,kBAEnE,yBAAKc,UAAU,kBAAkBjG,GAAG,mBAChC,8CAGJ,yBAAKiG,UAAU,mBAAmBjG,GAAG,oBACjC,6BACI,yBAAKiG,UAAU,mCACf,yBAAKA,UAAU,2BAAf,MACA,yBAAKA,UAAU,yBAAf,8BAIR,yBAAKA,UAAU,gDACX,sEACA,wBAAIjG,GAAG,qBACH,4BACI,yBAAKiG,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,sBAC3D,yBAAKL,UAAU,oBACX,wBAAIA,UAAU,cACV,wBAAIA,UAAU,qBAAoB,0BAC9BA,UAAU,YADoB,0DAElC,wBAAIA,UAAU,qBAAoB,0BAAMA,UAAU,eAAhB,uBAClC,wBAAIA,UAAU,kBAAd,gBACA,wBAAIA,UAAU,kBAAiB,wCAEnC,wBAAIA,UAAU,eACV,oEACA,wBAAIA,UAAU,oBAAmB,0BAAMF,MAAO,CAACN,MAAO,YAG9D,yBAAKQ,UAAU,gBAAf,sDAMhB,yBAAKA,UAAU,iDACX,yDACA,wBAAIjG,GAAG,sBACH,4BACI,yBAAKiG,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,2BAQ/E,yBAAKL,UAAU,2BAAf,qC,yBCxNGM,EAzBC,CAMNC,6BANM,SAMuBC,GAAW,OAAD,mHACnCC,EAAO,CACTC,MAAO,eACPC,QAAS,iBACTC,SAAU,KACVC,SAAU,QAL2B,SAQlBC,EAAKC,IAAL,UAAYC,EAAOC,KAAnB,iCAAwD,CAC3EC,QAAS,CACLC,OAAQ,oBAEZrI,OAAQ2H,IAZ6B,OAQnCW,EARmC,OAezCZ,EAASY,GAfgC,+C,iBCyNlCC,EA7NC,CAQNC,WARM,SAQKxI,GAAkC,IAAD,gJAAzByI,EAAyB,gCAAVf,EAAU,uBACxCC,EAAO,CACTe,IAAK,cAFqC,SAKvBV,EAAKC,IAAIC,EAAOS,KAAM,CACzC3I,OAAO,2BAAK2H,GAAS3H,GACrByI,UAP0C,OAKxCH,EALwC,OAUxCM,EAAQ,CACVC,YAAa,GACbC,GAAI,GACJC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,cAAe,GACfC,cAAe,GACfC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,OAAQ,GACRC,WAAY,GACZC,MAAO,GACPC,kBAAmB,GACnBC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,QAAS,GACT,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,mBAAoB,GACpBC,OAAQ,GACRC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,eAAgB,GAChBC,eAAgB,GAChBC,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,MAAO,GACPC,MAAO,GACPC,UAAW,GACXC,OAAQ,GACRC,WAAY,GACZC,OAAQ,GACRC,aAAc,GACdC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,GAClBC,WAAY,GACZC,kBAAmB,GACnBC,WAAY,GACZC,aAAc,GACdC,cAAe,GACfC,cAAe,GACfC,gBAAiB,IAGfC,EAAOC,EAAUlE,EAASiE,KAAM3D,GAGhC1G,EAASqK,EAAKE,QAAO,SAACC,EAAO9H,GAQ/B,OAPA8H,EAAMhM,KAAK,CACPO,GAAI2D,EAAKkE,GACT6D,OAAQ/H,EAAKsG,eACb0B,QAAShI,EAAKuG,gBACd0B,MAAOjI,EAAKmE,OAGT2D,IACR,IAEHhF,EAASxF,GAtFqC,+CA8F5C4K,aAtGM,SAsGO9M,EAAQ0H,GAAW,OAAD,yHAC3BC,EAAO,CACTe,IAAK,iBAFwB,SAKVV,EAAKC,IAAIC,EAAOS,KAAM,CACzC3I,OAAO,2BAAK2H,GAAS3H,KANQ,OAK3BsI,EAL2B,OAS3BM,EAAQ,CACVmE,KAAM,GACNC,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,iBAAkB,GAClBC,iBAAkB,GAClBC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAgB,eAChBC,iBAAkB,eAClBC,iBAAkB,eAClBC,iBAAkB,eAClBlF,YAAa,GACbmF,SAAU,GACVC,WAAY,GACZC,YAAa,GACbxE,QAAS,GACTyE,WAAY,GACZ1E,QAAS,GACTuC,WAAY,GACZ1B,WAAY,GACZ8D,QAAS,GACTC,aAAc,GACdC,WAAY,GACZC,aAAc,GACdC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,UAAW,GACXC,YAAa,GACblF,WAAY,GACZmF,aAAc,GACdC,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,aAAc,GACd,iBAAkB,GAClBC,OAAQ,GACR/D,OAAQ,GACR9B,SAAU,GACViC,aAAc,GACd6D,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,kBAAmB,GACnBC,iBAAkB,GAClBC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,SAAU,GACVC,OAAQ,eACRC,WAAY,eACZC,WAAY,eACZC,eAAgB,eAChBC,SAAU,eACVC,QAAS,eACTC,WAAY,eAEZC,iBAAkB,GAClBC,gBAAiB,GACjBC,cAAe,GACfC,gBAAiB,GACjBC,aAAc,GACdC,iBAAkB,GAClBC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,cAAe,IAGbjF,EAAOC,EAAUlE,EAASiE,KAAM3D,GAGhC1G,EAASqK,EAAKE,QAAO,SAACC,EAAO9H,GAY/B,OAXA8H,EAAMhM,KAAK,CACPiM,OAAQ/H,EAAKuI,gBAAkBvI,EAAKwL,WACpCvD,MAAOjI,EAAKqJ,WACZwD,QAASC,IAAM9M,EAAK2J,cAAcoD,OAAO,gCACzCC,MAAOhN,EAAKoK,UACZ6C,QAAQ,GAAD,OAAKjN,EAAK8E,QAAQoI,OAAO,EAAG,GAA5B,wBAAoClN,EAAK8E,QAAQoI,OAAO,EAAG,GAA3D,UACPC,MAAOnN,EAAKgK,MACZoD,SAAUpN,EAAK8J,SACfuD,QAASrN,EAAK0K,WAGX5C,IACR,IAEHhF,EAASxF,EAAO,IAnHiB,+CCzF5BgG,EAAS,CAClBS,KAAK,GAAD,OAA6B,yBAA7B,0BAEJR,KAAM,sCAMGH,EAAOkK,IAAMC,OAAO,CAC7BC,OAAQ,IACR/J,OAAQ,mBACRD,QAAS,CAAC,gBAAiB,YAC3BiK,QAASC,YACLJ,IAAMK,SAASF,QACf,CAACG,kBAAkB,MAUdhG,EAAY,SAACD,EAAM3D,GAI5B,IAAM6J,EAAQC,OAAOC,KAAK/J,GAAO3G,OAC3B2Q,EAAOrG,EAAKlG,MAAM,MAIxB,OAFAuM,EAAKC,MAEED,EAAKE,KAAI,SAAAC,GAIZ,OAFgBA,EAAIjB,OAAO,EAAGiB,EAAIC,YAAY,MAAM3M,MAAM,KAE3CoG,QAAO,SAACvK,EAAQ+Q,EAAOpP,GAWlC,OATIA,EAAQ4O,IAEkB,OAAtBQ,EAAMC,MAAM,QACZD,EAAQA,EAAM5M,MAAM,OAGxBnE,EAAM,2BAAOA,GAAP,kBAAgBwQ,OAAOC,KAAK/J,GAAO/E,GAAUoP,KAGhD/Q,IACR,QASIiR,EALH,CACRC,KAAM5L,EACNmB,KAAMJ,GCnEG8K,EAAU,SAACC,EAAMC,EAAMd,GAChC,IAAM1Q,EAAShB,SAASC,eAAesS,EAAKrS,IACtCuF,EAAczE,EAAOyR,YACrBhT,EAAY8S,EAAK9S,UACjBiT,EAAY/T,OAAOyG,iBAAiB3F,GACpCkT,EAAiBxN,SAASuN,EAAUE,YACpCC,EAAkB1N,SAASuN,EAAUI,aACrCC,EAAYtT,EAAUgT,YAAcE,EAAiBE,EACrDG,EAAiBvT,EAAUiG,wBAAwBZ,KAYnDmO,EAAa,SAAC/T,GAChB,GAAkB,SAAdA,EAAsB,CACtB,IAAI4D,EAASyP,EAAK1R,KAAKE,EAAI,EAAM0E,EAAcsN,EAC/C/R,EAAOiF,MAAMZ,UAAb,sBAAwCvC,EAAQiQ,EAAhD,YAEA/R,EAAOiF,MAAMZ,UAAb,sBAAwCkN,EAAK1R,KAAKE,EAAIgS,EAAtD,QAIR,OAAQP,GACJ,IAAK,SACGQ,EAAiBD,EAAYrB,EAC7BuB,EAAW,QACJD,EAAiB,GACxBC,EAAW,QAEf,MACJ,IAAK,QAtBQ,WACb,IAAIC,EAAOtR,KAAKoE,MAAMuM,EAAK1R,KAAKE,GAAK0E,EAAcsN,IACnD/R,EAAOiF,MAAMZ,UAAb,sBAAwC6N,EAAOzN,EAA/C,OAqBI0N,KAUCC,EAAQ,CACjBC,MAAO,GAOPC,SARiB,SAQRzW,EAAM8J,GAAuB,IAAb4M,EAAY,uDAAL,IAC5B1U,KAAK2U,WAAW3W,GAChBgC,KAAKwU,MAAMxW,GAAQ4W,WAAW9M,EAAU4M,IAM5CC,WAhBiB,SAgBN3W,GACP6W,aAAa7U,KAAKwU,MAAMxW,MCxCjB8W,MAAMC,MA7BH,WACd,OACI,yBAAKzN,UAAU,aAAajG,GAAG,cAC3B,yBAAKiG,UAAU,OACX,wBAAIA,UAAU,WAAWjG,GAAG,YACxB,wBAAIiG,UAAU,cAAd,gBACA,wBAAIA,UAAU,YAAd,UACA,wBAAIA,UAAU,aAAd,4BACA,wBAAIA,UAAU,aAAd,+CACA,wBAAIA,UAAU,UAAd,kBACA,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,aAAd,4BACA,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,YAAd,sBCsBLwN,MAAMC,MApCF,WACf,OACI,yBAAKzN,UAAU,cAAcjG,GAAG,eAC5B,yBAAKiG,UAAU,uBACX,wBAAIjG,GAAG,gBACH,4BACI,yBAAKiG,UAAU,mCACf,yBAAKA,UAAU,uBAAf,KACA,yBAAKA,UAAU,qBAAf,yCAEJ,4BACI,yBAAKA,UAAU,oCAEnB,4BACI,yBAAKA,UAAU,oCAEnB,4BACI,yBAAKA,UAAU,oCAEnB,4BACI,yBAAKA,UAAU,sCAI3B,yBAAKA,UAAU,oBACX,wBAAIjG,GAAG,aACH,wBAAIiG,UAAU,yBAAd,kCACA,wBAAIA,UAAU,4BAAd,4BACA,wBAAIA,UAAU,4BAAd,sBACA,wBAAIA,UAAU,uBAAd,wBC7Bd0N,EAAmB,SAAC,GAAY,IAAXhQ,EAAU,EAAVA,KACvB,OACI,yBAAKsC,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAgB,OAAD,OAAS3C,EAAK+H,OAAd,mBAA+B/H,EAAKgI,WAAahI,EAAKiI,SAsBrHgI,EAAiB,SAAC,GAAY,IAAXjQ,EAAU,EAAVA,KACrB,OACI,yBAAKsC,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAgB,OAAD,OAAS3C,EAAK+H,OAAd,mBAA+B/H,EAAKgI,WAAahI,EAAKiI,SAoB5GiI,EAfA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,IAAKxB,EAAgB,EAAhBA,KAAM3O,EAAU,EAAVA,KAYxB,OAAO8P,IAAMM,cAAcD,EAAK,CAAC9T,GAAI2D,EAAK3D,IAX3B,WACX,OAAQsS,GAEJ,IAAK,aACD,OAAO,kBAAC,EAAD,CAAkB3O,KAAMA,IAEnC,IAAK,WACD,OAAO,kBAAC,EAAD,CAAgBA,KAAMA,KAIMqQ,KCpBpCP,MAAMC,MAvBA,SAACO,GAClB,OAAOA,EAAMvT,MAAMmR,KAAI,SAAClO,EAAMf,GAC1B,OACI,6BAASqD,UAAU,gBAAgB/G,IAAK0D,GACpC,sEAAcA,EAAM,GAEpB,wBAAI5C,GAAE,uBAAkB4C,EAAM,GAAK1D,IAAKyE,EAAK3D,GAAI+F,MAAO,CAACZ,UAAW,kBAChE,kBAAC,EAAD,CAAQ2O,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,IAC7C,kBAAC,EAAD,CAAQmQ,IAAK,KAAMxB,KAAM,aAAc3O,KAAMA,YCX7DpF,EAAUC,eAEV,iCAGA,iCAGJ,IAAI0V,EAAkB,KA0TPC,EAxTF,WAAO,IAAD,EACyBjQ,mBAAS,IADlC,mBACRkQ,EADQ,KACMC,EADN,OAEuBnQ,mBAAS,IAFhC,mBAERoQ,EAFQ,KAEKC,EAFL,OAGmBrQ,oBAAS,GAH5B,mBAGRsQ,EAHQ,KAGGC,EAHH,KAKTC,EAAWC,mBASjBtQ,qBAAU,WACNG,EAAWC,IAAI,CACXzE,GAAI,OACJJ,SAAU,CACN,CACII,GAAI,eACJhB,UAAW,CACP0F,MAAO,CACH1E,GAAI,aAER2E,KAAM,CACF3E,GAAI,mBAGZQ,MAAO,SAACX,GACJsG,GAAQ1G,KAAK,QAEjBgB,KAAM,WACF0F,GAAQ1F,SAGhB,CACIT,GAAI,YACJhB,UAAW,CACP4F,KAAM,CACF5E,GAAI,gBAER2E,KAAM,CACF3E,GAAI,oBAIhB,CACIA,GAAI,WACJqB,QAAS,CACLE,KAAM,GAEVvC,UAAW,CACP0F,MAAO,CACH1E,GAAI,iBACJqD,UAAU,IAGlBO,MAAO,WACH6Q,GAAa,IAEjBnR,MAAM,WACFmR,GAAa,IAEjBrS,MAAO,SAACvC,GACAqU,IAAoBrU,EAAQN,UAC5BqV,EAAO1B,MAAMI,WAAW,YAExBsB,EAAO1B,MAAME,SAAS,WAAU,WAC5B,OAAQvT,EAAQc,KAAKC,GACjB,KAAK,EACD2G,EAAW,SACX,MACJ,KAAK,EACDA,EAAW,SACX,MACJ,KAAK,EACDA,EAAW,SACX,MACJ,KAAK,EACDA,EAAW,aAOvB2M,EAAkBrU,EAAQN,YAGlCkB,KAAM,WACF0F,GAAQ1F,YAOxB8G,EAAW,WACZ,IAGHlD,qBAAU,WACN,IAAIhD,EAAU,KACVwT,EAAK,KACLlQ,EAAO,KAEXyP,EAAa1U,SAAQ,SAACoV,EAAMlS,GAEV,IAAVA,GACAiS,EAAK,SAAChV,GACF,GAAIA,EAAQuD,aAAevD,EAAQuD,YAAYuB,KAC3C,OAAQ9E,EAAQuD,YAAYuB,KAAK3E,IAC7B,IAAK,eACDwE,EAAWlC,GAAG,gBACd,MACJ,IAAK,YACDkC,EAAWlC,GAAG,kBAMtBkC,EAAWlC,GAAG,iBAItBjB,EAAU,CACNyC,MAAM,EACNxC,MAAO,CAACV,EAAG,EAAGC,EAAG,MAGrBgU,EAAK,CACD7U,GAAG,gBAAD,OAAkB4C,IAGxBvB,EAAU,CACNyC,MAAM,IAMVa,EADA/B,IAAUwR,EAAapT,OAAS,EACzB,CACHhB,GAAI,iBAGD,CACHA,GAAG,gBAAD,OAAkB4C,EAAM,IAIlC4B,EAAWuQ,WAAW,OAAQ,CAC1B,CACI/U,GAAG,gBAAD,OAAkB4C,EAAM,GAC1BvB,QAASA,EACTrC,UAAW,CACP4F,KAAM,CACF5E,GAAI,YAER6U,GAAIA,EACJlQ,KAAMA,GAEVf,MAAO,SAAC/D,GACJ2E,EAAWwQ,gBAAgB,WAAY,CACnCtQ,MAAO,CACH1E,GAAIH,EAAQG,GACZqD,UAAU,KAIlBqR,EAASO,QAAQlP,MAAjB,iEAA2F,IAARnD,EAAnF,QAEJR,MAAO,SAACvC,GAEC2E,EAAWrF,SACZ+V,EAAYrV,IAGpBW,MAAO,SAACX,GACJ0U,EAAe1U,EAAQN,UAAU4V,QAAQnV,IAEzCoV,GAAOC,MAAM,QAAS,eAAgB,CAClCrV,GAAIsU,KAGZ7T,KAAM,WACF0F,GAAQ1F,cAMxB+D,EAAWwQ,gBAAgB,WAAY,CACnCtQ,MAAO,CACH1E,GAAI,iBACJqD,UAAU,KAKlBmB,EAAWwQ,gBAAgB,gBAAiB,CACxCH,GAAI,CACA7U,GAAG,gBAAD,OAAkBoU,EAAapT,WAIzC0T,EAASO,QAAQlP,MAAQ,+CAC1B,CAACqO,IAMJ,IAAMc,EAAc,SAACrV,GACjB,IAAMkF,EAAYjF,SAASC,eAAeF,EAAQG,IAC5CgF,EAAaC,SAASC,iBAAiBH,GAAWI,UAAUC,MAAM,KAAK,GAAGC,QAC1EU,EAAQb,iBAAiBrF,EAAQN,WACjCsG,EAAWZ,SAASc,EAAMN,OAASR,SAASc,EAAM6M,aAClD1V,EAAS8H,EAAa,EACtBtB,EAAQ7D,EAAQc,KAAKE,EACrByU,EAAQzV,EAAQc,KAAKC,EAE3B,OAAQ4D,EAAWtF,KACf,IAAK,QACD,IAAM2B,EAAc,IAAV6C,EAAc7D,EAAQa,MAAM4U,GAAOtU,OAAS,EAAI0C,EAAQ,EAEpD,IAAVA,GAAexG,GACfsH,EAAWrF,SAAU,EAErB4F,EAAUgB,MAAMwP,QAAhB,iEAA6F,EAAT1P,EAApF,OAEAhG,EAAQa,MAAM4U,GAAOzU,GAAGmB,UAAUG,IAAI,WAC/BuB,EAAQ,IACfc,EAAWrF,SAAU,EAErB4F,EAAUgB,MAAMwP,QAAgB,iEAANrY,EAC6C,EAAT2I,EACAA,EAF9B,OAIhChG,EAAQa,MAAM4U,GAAOzU,GAAGmB,UAAUG,IAAI,WAG1C,MACJ,IAAK,OACa,IAAVuB,GACAqB,EAAUyQ,kBAAkBxT,UAAUC,OAAO,UAC7C8C,EAAUgB,MAAMwP,QAAU,6DAE1B/Q,EAAWrF,SAAU,EAErB4F,EAAU0Q,aAAa1Q,EAAU2Q,iBAAkB3Q,EAAU4Q,YAC7D5Q,EAAUgB,MAAMwP,QAAhB,mDAA+E,EAAT1P,EAAtE,OAEAd,EAAUyQ,kBAAkBxT,UAAUG,IAAI,UAC1CtC,EAAQa,MAAM4U,GAAO5R,GAAO1B,UAAUC,OAAO,UAG7CsR,YAAW,WACPxO,EAAUgB,MAAMwP,QAAhB,iEAAoF1P,EAApF,SACD,IAOfd,EAAU6Q,gBAAkB,SAACxV,GACzB,GAAIA,EAAMyC,OAAOgT,aAAa,QAAUhW,EAAQG,GAAI,CAChD,GAAuB,UAAnBwE,EAAWtF,IACX,GAAc,IAAVwE,EAAa,CACb,IAAK,IAAI9B,EAAI,EAAGA,EAAI,EAAGA,IACnBmD,EAAUyQ,kBAAkBxT,UAAUC,OAAO,UAC7C8C,EAAU+Q,OAAO/Q,EAAUyQ,mBAG/BzQ,EAAUgB,MAAMwP,QAAU,kDACnB7R,EAAQ,IACfqB,EAAUyQ,kBAAkBxT,UAAUC,OAAO,UAC7C8C,EAAU+Q,OAAO/Q,EAAUyQ,mBAE3BzQ,EAAUgB,MAAMwP,QAAhB,mDAAsE1P,EAAtE,QAIRrB,EAAWrF,SAAU,KAS3BoI,EAAa,SAACvH,GAChBkS,EAAIxK,KAAKH,WAAW,CAChBwO,MAAM,oDAAD,OAAsD/V,EAAtD,qMACN,GAAM,SAAAqH,GACLgN,EAAgBhN,OAIxB,OACI,yBAAKpB,UAAS,yBAAoBuO,EAAY,aAAe,KACzD,kBAAC,EAAD,MACA,yBAAKvO,UAAU,YAAY+P,IAAKtB,GAC5B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAchU,MAAO0T,OCvStB6B,GA3BE,SAAC,GAAe,IAAdzW,EAAa,EAAbA,QAkBf,OAjBA6E,qBAAU,WACNG,EAAWC,IAAI,CACXzE,GAAI,WACJJ,SAAU,CACN,CACII,GAAI,iBACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErBJ,KALJ,WAMQjB,EAAQ0W,gBAKzB,CAAC1W,IAGA,yBAAKQ,GAAG,YACJ,wBAAIA,GAAG,kBACH,8ECrBZzB,EAAUC,eAEV,kCAGA,kCAGJ,IA+Ge2X,GA/GD,SAAC,GAAc,IAAbpX,EAAY,EAAZA,OAmDZ,OAhDAsF,qBAAU,WA0CN,OAzCAG,EAAW4R,YAAY,CACnBpW,GAJa,QAKbJ,SAAU,CACN,CACII,GAAI,wBACJhB,UAAW,CACP2F,KAAM,CACF3E,GAAI,yBAGZqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErBL,MAAO,WACH4U,GAAOC,MAAM,QAAS,eAAgB,CAClCgB,SAAU,4CAGlB5V,KAAM,WACF2U,GAAOkB,QAAQvX,EAAOwX,YAG9B,CACIvW,GAAI,uBACJhB,UAAW,CACP6V,GAAI,CACA7U,GAAI,0BAGZQ,MAAO,WACH4U,GAAOC,MAAM,QAAS,eAAgB,CAClCzJ,MAAO,wBAGfnL,KAAM,WACF2U,GAAOkB,QAAQvX,EAAOwX,eAMhC,WAEF/R,EAAWgS,YA9CE,YAgDlB,IAGC,yBAAKxW,GAAG,SACJ,yBAAKiG,UAAU,mBACX,yBAAKA,UAAU,iBACX,kDACA,4BACI,0CACA,4CACA,sDAEJ,4BACI,4CACA,yDAEJ,4BACI,4CACA,yDAEJ,0aAIA,yBAAKA,UAAU,wBAAwBjG,GAAG,yBACtC,+DAIZ,yBAAKiG,UAAU,wBACX,wBAAIjG,GAAG,wBACH,4BACI,yBAAKiG,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,wBAGnE,4BACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,mBAAmBF,MAAO,CAACO,gBAAiB,4BChExE,O,WAhDX,aAAe,oBACX3H,KAAKa,QAAU,KACfb,KAAK8X,aAAe,G,iDAGnB1X,GACDJ,KAAKa,QAAUT,I,4BAOb2X,GACF/X,KAAK8X,aAAahX,KAAK,CACnBiX,KAAMA,M,2BAUTA,GAA2B,IAArBzZ,EAAoB,uDAAZ,GAAI0Z,EAAQ,uCAC3BhY,KAAKa,QAAQC,KAAKiX,EAAMzZ,GAGnB0Z,GAAQhY,KAAKiY,MAAMF,K,6BAQxB,IAAMlX,EAAUb,KAAK8X,aAEjBjX,EAAQwB,OAAS,IACjBxB,EAAQqC,OAAOrC,EAAQwB,OAAO,EAAG,GACjCrC,KAAKa,QAAQqX,QAAQrX,EAAQA,EAAQwB,OAAO,GAAG0V,W,MCQ5C,O,6FA7CNI,EAAQxL,EAAM7E,GACfnC,QAAQC,IAAR,4BAAiCuS,IACjCrY,OAAOsY,MAAMC,YAAYC,KAAK,kCAAmCH,EAAQxL,GAAM,SAASjE,GACpFZ,EAASY,Q,kCAQLZ,GACR9H,KAAKsY,KAAK,cAAe,MAAM,SAAC5P,GAC5BZ,EAASY,Q,gCASPiE,EAAM7E,GACZ9H,KAAKsY,KAAK,YAAa3L,GAAM,SAACjE,GAC1BrJ,EAAMkZ,SAAS5Z,EAAY+J,S,qCAQpBiE,GACX,IAAM9L,EAAU2G,GAAQsQ,aAGxBhF,OAAO0F,OAAO3X,EAAQA,EAAQwB,OAAQ,GAAG,CAACoB,MAAOkJ,IAEjDhH,QAAQC,IAAI/E,O,MCTL4X,GA9BJ,WAqBP,OApBA/S,qBAAU,WACNG,EAAWC,IAAI,CACXzE,GAAI,KACJJ,SAAU,CACN,CACII,GAAI,WACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErBL,MALJ,SAKUX,GACFwX,GAAWC,eAAezX,IAE9BY,KARJ,WASQ0F,GAAQ1F,cAKzB,IAGC,yBAAKT,GAAG,MACJ,wBAAIA,GAAG,YACH,kECEDuX,GA3BC,SAAC,GAAe,IAAd/X,EAAa,EAAbA,QAkBd,OAjBA6E,qBAAU,WACNG,EAAWC,IAAI,CACXzE,GAAI,UACJJ,SAAU,CACN,CACII,GAAI,gBACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErBJ,KALJ,WAMQjB,EAAQ0W,gBAKzB,CAAC1W,IAGA,yBAAKQ,GAAG,WACJ,wBAAIA,GAAG,iBACH,kECpBZzB,EAAUC,eAEV,iCAGA,kCAGJ,ICoCegZ,GApCA,CACX,CACId,KAAM,IACNe,OAAO,EACPC,UAAW3T,GAEf,CACI2S,KAAM,QACN1C,OAAQ,WAEA,OAAO,kBAAC,EAAD,QAInB,CACI0C,KAAM,YACNgB,UAAWzB,IAEf,CACIS,KAAM,SACNgB,UAAWvB,IAEf,CACIO,KAAM,MACNgB,UAAWN,IAEf,CACIV,KAAM,WACNgB,UAAWH,IAEf,CACIb,KAAM,YACNgB,UDhCS,SAAC,GAAe,IAAdlY,EAAa,EAAbA,QA0Cf,OAzCA6E,qBAAU,WACNG,EAAWC,IAAI,CACXzE,GAAI,WACJJ,SAAU,CACN,CACII,GAAI,kBACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErB7B,UAAW,CACPuE,KAAM,SACNoB,KAAM,CACF3E,GAAI,qBAIhB,CACIA,GAAI,kBACJhB,UAAW,CACPuE,KAAM,SACNsR,GAAI,CACA7U,GAAI,mBAER2E,KAAM,CACF3E,GAAI,qBAIhB,CACIA,GAAI,kBACJhB,UAAW,CACPuE,KAAM,SACNsR,GAAI,CACA7U,GAAI,0BAMzB,CAACR,IAGA,yBAAKQ,GAAG,YACJ,yBAAKiG,UAAU,sBACX,wBAAIjG,GAAG,mBACH,wBAAI+F,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,OAEJ,wBAAIzF,GAAG,mBACH,wBAAI+F,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,OAEJ,wBAAIzF,GAAG,mBACH,wBAAI+F,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,MACA,wBAAIM,MAAO,CAACN,MAAO,QAAnB,YElCLkS,GAhCD,SAAC,GAAc,IAAb5Y,EAAY,EAAZA,OAyBZ,OAtBAsF,qBAAU,WAgBN,OAfAG,EAAW4R,YAAY,CACnBpW,GAJa,QAKbJ,SAAU,CACN,CACII,GAAI,aACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErBL,MAAO,WACH4U,GAAOkB,QAAQvX,EAAOwX,eAMhC,WAEF/R,EAAWgS,YApBE,YAsBlB,IAGC,yBAAKvQ,UAAU,QAAQjG,GAAG,cACtB,6BAAMjB,EAAOsX,YC8DVuB,GA1FD,SAAC,GAAc,IAAb7Y,EAAY,EAAZA,OA0DZ,OAzDAsF,qBAAU,WAmDN,OAhDAG,EAAW4R,YAAY,CACnBpW,GAHiB,QAIjBJ,SAAU,CACN,CACII,GAAI,cACJhB,UAAW,CACP6V,GAAI,WACAvQ,QAAQC,IAAI,cAEhBI,KAAM,CACF3E,GAAI,gBAIhB,CACIA,GAAI,aACJhB,UAAW,CACP6V,GAAI,CACA7U,GAAI,eAER2E,KAAM,CACF3E,GAAI,gBAIhB,CACIA,GAAI,aACJqB,QAAS,CACLC,MAAO,CAACV,EAAG,EAAGC,EAAG,IAErB7B,UAAW,CACP6V,GAAI,CACA7U,GAAI,eAGZQ,MAAO,SAACX,GACyB,WAAzBA,EAAQN,UAAUS,GAClBoV,GAAOkB,QAAQvX,EAAOwX,UAEtBnB,GAAOC,MAAM,QAAS,eAAe,CACjCgB,SAAU,4BAQ5B,WAEF7R,EAAWgS,YApDM,YAsDtB,IAGC,yBAAKvQ,UAAU,cACX,iCACI,4BAAKlH,EAAO6M,OACZ,+DACA,yBAAK5L,GAAG,eACJ,oGACiB,6BADjB,uEAEiB,6BAFjB,uEAGiB,6BAHjB,uEAIiB,6BAJjB,uEAKiB,6BALjB,uEAMiB,6BANjB,uEAOiB,6BAPjB,uEAQiB,6BARjB,uEASiB,6BATjB,uEAUiB,6BAVjB,yEAcJ,yBAAKA,GAAG,cACJ,2BAAOsS,KAAK,OAAOuF,YAAY,2CAEnC,yBAAK7X,GAAG,cACJ,4BAAQA,GAAG,WAAX,gBACA,4BAAQA,GAAG,UAAX,oBCxBL,O,8FAjDLsS,EAAMtS,EAAIjB,GAEZA,EAAO+Y,WAAaxF,EACpBvT,EAAOwX,SAAWvW,EAIlB,IAAM+E,EAAYjF,SAASiU,cAAc,OAKzC,OAJAhP,EAAUgB,MAAMwP,QAAU,mCAC1BxQ,EAAUgT,aAAa,KAAMhZ,EAAOwX,UACpCzW,SAASC,eAAeuS,GAAM0F,YAAYjT,GAElChG,EAAOwX,UACX,IAAK,eACD5X,KAAKqV,OAAO,kBAAC,GAAD,CAAOjV,OAAQA,IAAYA,EAAOwX,UAC9C,MACJ,IAAK,eACD5X,KAAKqV,OAAO,kBAAC,GAAD,CAAOjV,OAAQA,IAAYA,EAAOwX,UAC9C,MACJ,IAAK,eACD5X,KAAKqV,OAAO,kBAAC,GAAD,CAAOjV,OAAQA,IAAYA,EAAOwX,a,8BAWlDvW,GACJ,IAAM6C,EAAS/C,SAASC,eAAeC,GAGvCiY,IAASC,uBAAuBrV,GAChCA,EAAOZ,W,6BAQJyV,EAAW1X,GACdiY,IAASjE,OAAO0D,EAAW5X,SAASC,eAAeC,Q,MCiB5CmY,GAtEO,aC2BPC,GA3BH,WACR,IAAM5Y,EAAU6Y,cAWhB,OARAhU,qBAAU,WAEN8T,KAGAhS,GAAQmS,KAAK9Y,KACd,IAGC,kBAAC,IAAM+Y,SAAP,KACI,kBAAC,IAAD,KACKf,GAAO3F,KAAI,SAAC2G,EAAO5V,GAAR,OACR,kBAAC,IAAD,eAAO1D,IAAK0D,GAAW4V,QAI/B,yBAAKxY,GAAG,UACR,yBAAKA,GAAG,UACR,yBAAKA,GAAG,YCfAyY,QACW,cAA7Bha,OAAOia,SAASC,UAEe,UAA7Bla,OAAOia,SAASC,UAEhBla,OAAOia,SAASC,SAAS1G,MACvB,2DCTN,sBAAC,sBAAA2G,EAAA,0DACOra,EAAUC,eADjB,gCAEa,iCAFb,6CAIa,iCAJb,OAOGyZ,IAASjE,OACL,kBAAC,IAAM6E,WAAP,KACI,kBAAC,IAAD,CAAU7a,MAAOA,GACb,kBAAC,IAAD,CAAe8a,SAAQ,WAAMC,kBACzB,kBAAC,GAAD,SAIZjZ,SAASC,eAAe,SAf/B,0CAAD,GD0HM,kBAAmBiZ,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5da7162c.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst deviceInfoSlice = createSlice({\n    name: 'deviceInfo',\n    initialState: {\n        model: '',\n        mac: ''\n    },\n    reducers: {\n        setDeviceInfo: (state, action) => {\n            return {...state, ...action.payload};\n        }\n    }\n});\n\nconst userInfoSlice = createSlice({\n    name: 'userInfo',\n    initialState: {\n        name: '',\n        age: ''\n    },\n    reducers: {\n        setUserInfo: (state, action) => {\n            return {...state, ...action.payload};\n        }\n    }\n})\n\nexport const {setDeviceInfo} = deviceInfoSlice.actions;\nexport const {setUserInfo} = userInfoSlice.actions;\n\nexport {deviceInfoSlice, userInfoSlice};","import {createSlice} from '@reduxjs/toolkit';\n\nconst launcherExampleSlice = createSlice({\n    name: 'launcherExample',\n    initialState: {\n        launcherState1: '',\n        launcherState2: ''\n    },\n    reducers: {\n        setLauncherState: (state, action) => {\n            return {...state, ...action.payload};\n        }\n    }\n});\n\nexport const {setLauncherState} = launcherExampleSlice.actions;\n\nexport default launcherExampleSlice;","import {createSlice} from '@reduxjs/toolkit';\n\nconst homeExampleSlice = createSlice({\n    name: 'homeExample',\n    initialState: {\n        homeState1: '',\n        homeState2: ''\n    },\n    reducers: {\n        setHomeState: (state, action) => {\n            return {...state, ...action.payload};\n        }\n    }\n});\n\nexport const {setHomeState} = homeExampleSlice.actions;\n\nexport default homeExampleSlice;","import {configureStore} from '@reduxjs/toolkit';\n\nimport {deviceInfoSlice, userInfoSlice} from './slice';\nimport launcherExampleSlice from '../features/launcher/launcherSlice';\nimport homeExampleSlice from '../features/home/homeSlice';\n\nconst store = configureStore({\n\treducer: {\n        deviceInfo: deviceInfoSlice.reducer,\n        userInfo: userInfoSlice.reducer,\n        launcherExample: launcherExampleSlice.reducer,\n        homeExample: homeExampleSlice.reducer\n    }\n});\n\nexport default store;","const CONSTANTS = {\n    RESOLUTION_FHD: window.innerWidth >= 1920\n}\n\nexport default CONSTANTS;","/**\n * 임의수정 금지\n * LG HelloVision 미디어기술팀 신현승 (bbakbbak@lghv.net)\n */\nimport {Map} from 'immutable';\n\nclass Navigation {\n    constructor() {\n        //selected 와 focus 시 적용 - css 클래스\n        this.selectedClass = 'selected';\n        this.focusClass = 'focus';\n        this.focusHistory = null;\n    }\n    \n    receiveKey(params) {\n        let direction = '';\n\n        switch (params.KEY_CODE) {\n            case 19:\n                direction = 'up';\n                break;\n            case 20:\n                direction = 'down';\n                break;\n            case 21:\n                direction = 'left';\n                break;\n            case 22:\n                direction = 'right';\n                break;\n            default:\n                break;\n        }\n\n        this.key = direction; //입력된 키 저장\n\n        if (this.key && !this.prevent) {\n            this.move(direction);\n        }\n    }\n    \n    /**\n     * 초기 세팅\n     */\n    set(params) {\n        //페이지 로딩시 초기화\n        this.navigation = [];\n        this.focusSection = null;\n        this.focusItem = null;\n        this.history = [];\n        this.key = ''; //현재 입력된 키 식별\n        this.prevent = false; //키 이벤트 차단/해제\n        \n        this.navigation.push(params);\n        \n        this.navigation.forEach(layer => {\n            layer.sections.forEach(section => {\n                if (document.getElementById(section.id)) {\n                    this.setItems(section);\n                }\n            });\n        });\n        \n        document.body.onkeydown = event => {\n            let direction = '';\n            \n            switch (event.keyCode) {\n                case 38:\n                    direction = 'up';\n                    break;\n                case 40:\n                    direction = 'down';\n                    break;\n                case 37:\n                    direction = 'left';\n                    break;\n                case 39:\n                    direction = 'right';\n                    break;\n                default:\n                    break;\n            }\n            \n            this.key = direction; //입력된 키 저장\n            \n            if (this.key && !this.prevent) {\n                this.move(direction);\n            }\n        }\n        \n        document.body.onkeyup = event => {\n            if (event.keyCode === 13) {\n                event.preventDefault();\n                this.focusSection.enter && this.focusSection.enter(this.focusSection);\n            } else if (event.keyCode === 8) {\n                event.preventDefault();\n                this.focusSection.back && this.focusSection.back();\n            }\n        }\n    }\n    \n    /**\n     * 포커스 아이템 세팅\n     * @param section\n     * @param items\n     */\n    setStore(section, items) {\n        section['items'] = items;\n        \n        let axis;\n        \n        if (section['axis']) {\n            axis = {\n                y: section.axis.y,\n                x: section.axis.x\n            }\n        } else {\n            axis = {\n                y: 0,\n                x: 0\n            }\n        }\n    \n        section['axis'] = axis\n    }\n    \n    /**\n     * 포커스 아이템 세팅\n     * @param section\n     */\n    setItems(section) {\n        const parent = document.getElementById(section.id);\n        const children = [...parent.children];\n        \n        if (children.length > 0) {\n            //다차원 배열로 변환\n            let result = this.convertMultiArray(section, children);\n            \n            //포커스 아이템 세팅 및 axis 초기화\n            this.setStore(section, result);\n            \n            //네이티브로 부터 넘어온 히스토리백 정보가 있을 경우\n            if (this.focusHistory && section.id === this.focusHistory.id) {\n                this.focusSection = section;\n                this.focusSection.axis = this.focusHistory.axis;\n                this.switchFocus();\n                \n                //히스토리 초기화\n                this.focusHistory = null;\n            } else {\n                //최초 포커스\n                if (section.options && section.options.start && this.focusSection === null) {\n                    this.focusSection = section;\n                    this.focusSection.axis = section.options.start;\n                    this.switchFocus();\n                }\n            }\n        }\n    }\n    \n    /**\n     * 포커스 대상 아이템을 다차원 배열로 변환\n     * @param section\n     * @param items\n     * @returns {[]}\n     */\n    convertMultiArray(section, items) {\n        let result = [];\n        \n        if (section.options && section.options.cols) {\n            const cols = section.options.cols;\n            const total = items.length;\n            const count = Math.ceil(total / cols);\n            \n            for (let i = 0; i < count; i++) {\n                total > 0 && result.push(items.splice(0, cols));\n            }\n        } else {\n            result = [items];\n        }\n        \n        return result;\n    }\n    \n    /**\n     * 포커스 대상 아이템 변경\n     */\n    switchFocus() {\n        const inputTag = document.getElementsByTagName('input')[0];\n        \n        //이전 아이템 포커스 처리\n        this.focusItem && this.focusItem.classList.remove(this.focusClass);\n        this.focusItem === inputTag && this.focusItem.blur();\n        \n        //다음 아이템 포커스 처리\n        this.focusItem = this.focusSection.items[this.focusSection.axis.y][this.focusSection.axis.x];\n        this.focusItem.classList.remove(this.selectedClass);\n        this.focusItem.classList.add(this.focusClass);\n        this.focusItem === inputTag && this.focusItem.focus();\n        this.focusSection.focusItem = this.focusItem;\n        this.focusSection.focus && this.focusSection.focus(this.focusSection);\n    }\n    \n    /**\n     * 조건에 맞는 section 검색\n     * @param id\n     * @returns {*}\n     */\n    findSection(id) {\n        let result = {};\n\n        this.navigation.forEach(layer => {\n            layer.sections.forEach(section => {\n                if (section.id === id) {\n                    result = section\n                }\n            })\n        });\n\n        return result;\n    }\n    \n    /**\n     * 해당 아이템으로 포커스 이동\n     * @param id\n     * @param axis\n     */\n    go(id, axis) {\n        this.focusSection = this.findSection(id);\n        \n        //이동할 section - axis 업데이트\n        if (axis) {\n            this.focusSection.axis = {\n                y: axis.y,\n                x: axis.x\n            }\n        }\n        \n        this.switchFocus();\n    }\n    \n    /**\n     * 신규 레이어 생성\n     * @param params\n     */\n    createLayer(params) {\n        this.history.push(this.focusSection); //레이어삭제 후 돌아올 포커스 영역 저장\n        this.navigation.push(params);\n    \n        params.sections.forEach(section => {\n            this.setItems(section);\n    \n            //신규 레이어 생성 시 초기 focus 이동\n            if (section.options && section.options.start) {\n                this.go(section.id);\n            }\n        });\n    }\n    \n    /**\n     * 레이어 삭제\n     * @param id\n     */\n    removeLayer(id) {\n        const history = this.history[this.history.length-1];\n        const idx = this.navigation.findIndex(layer => {\n            return layer.id === id\n        });\n    \n        this.navigation.splice(idx, 1);\n        this.history.splice(this.history.length-1, 1);\n        this.go(history.id);\n    }\n    \n    /**\n     * 포커스 영역 추가\n     * @param id\n     * @param sections\n     */\n    addSection(id, sections) {\n        let existing = this.navigation.find(layer => {\n            return layer.id === id;\n        });\n    \n        sections.forEach(section => {\n            //추가할 영역이 기존에 존재하면 기존 영역은 삭제 후 추가\n            existing.sections.forEach((exist, index) => {\n                if (exist.id === section.id) {\n                    existing.sections.splice(index, 1);\n                }\n            });\n        \n            existing.sections.push(section);\n            this.setItems(section);\n        });\n    }\n    \n    /**\n     * 포커스 영역 삭제\n     * @param id\n     */\n    removeSection(id) {\n        // 수정 예정\n        // const idx = this.navigation.findIndex(layer => {\n        //     return layer.id === id\n        // });\n        //\n        // this.navigation.splice(idx, 1);\n    }\n    \n    /**\n     * 포커스 아이템 추가\n     * @param id\n     */\n    addItems(id) {\n        const target = this.findSection(id);\n        const parent = document.getElementById(target.id);\n        const children = [...parent.children];\n        \n        if (children.length > 0) {\n            let result = this.convertMultiArray(target, children);\n            this.setStore(target, result);\n        }\n    }\n    \n    /**\n     * 비동기 로딩 시 키 동작 대기\n     * @param directions\n     */\n    preventKey(directions) {\n        //deep copy 위한 immutable 처리\n        this.focusSectionCopy = Map(this.focusSection).toJS();\n        \n        directions.forEach(direction => {\n            if (this.focusSection.direction[direction] !== null) {\n                this.focusSection.direction[direction] = null;\n            }\n        });\n    }\n    \n    /**\n     * 키 동작 대기 해제\n     */\n    permitKey() {\n        let target = this.findSection(this.focusSectionCopy.id);\n        target.direction = this.focusSectionCopy.direction;\n    \n        this.focusSectionCopy = null;\n    }\n    \n    /**\n     * next section 변환\n     * @param id\n     * @param direction\n     */\n    switchDirection(id, direction) {\n        let target = this.findSection(id);\n        target.direction = direction;\n    }\n    \n    /**\n     * 네비게이션 이동\n     * @param direction\n     */\n    move(direction) {\n        /**\n         * 현재 영역에서 이동할 아이템이 없을 경우 다음 영역을 찾는다.\n         */\n        const findNextSection = () => {\n            const next = this.focusSection.direction && this.focusSection.direction[direction];\n\n            //다음 영역으로 이동하기 전 현재 영역을 이전 영역으로 저장\n            const prevSection = this.focusSection;\n            \n            if (next && document.getElementById(next.id) && typeof next !== 'function') {\n                //다음 영역으로 이동할 때 selected 상태 처리\n                next.selected && this.focusItem.classList.add(this.selectedClass);\n                \n                //다음 영역으로 이동하기 전 현재 영역에서 실행 할 함수\n                this.focusSection.leave && this.focusSection.leave(this.focusSection);\n                \n                switch (this.focusSection.direction.mode) {\n                    //direction type offset 일 경우 현재 항목과 가까운 항목을 찾아 이동\n                    case 'offset':\n                        let currentOffsetLeft = this.focusSection.focusItem.offsetLeft;\n                        let axisX = 0;\n    \n                        //다음 이동할 영역 지정\n                        this.focusSection = this.findSection(next.id);\n    \n                        this.focusSection.items[0].forEach((item, index) => {\n                            if (item.offsetLeft <= currentOffsetLeft) {\n                                axisX = index;\n                            }\n        \n                            return axisX;\n                        });\n    \n                        this.focusSection.axis.x = axisX;\n                        break;\n                    case 'prev':\n                        break;\n                    default:\n                        //다음 이동할 영역 지정\n                        this.focusSection = this.findSection(next.id);\n                }\n                \n                //이전 영역을 현재 영역에 저장\n                this.focusSection.prevSection = {\n                    ...this.focusSection.prevSection,\n                    [this.key]: prevSection\n                }\n                \n                //다음 영역으로 이동 후 실행 할 함수\n                this.focusSection.entry && this.focusSection.entry(this.focusSection);\n                this.switchFocus();\n            } else if (typeof next === 'function') {\n                this.focusSection.direction[direction](this.focusSection);\n            }\n        }\n        \n        //이동 옵션\n        const nextRow = this.focusSection.options && this.focusSection.options.nextRow;\n        const loop = this.focusSection.options && this.focusSection.options.loop;\n        \n        switch (direction) {\n            case 'right':\n                if (this.focusSection.axis.x < this.focusSection.items[this.focusSection.axis.y].length - 1) {\n                    this.focusSection.axis.x += 1;\n                    this.switchFocus();\n                } else {\n                    if (nextRow) {\n                        //X 좌표의 마지막 항목에서 바로 아래 리스트 첫번째 항목으로 이동\n                        if (this.focusSection.axis.y < this.focusSection.items.length - 1) {\n                            this.focusSection.axis.y += 1;\n                            this.focusSection.axis.x = 0;\n                            this.switchFocus();\n                        }\n                    } else if (loop) {\n                        //X 좌표의 마지막 항목에서 현재 리스트 첫번째 항목으로 이동\n                        this.focusSection.axis.x = 0;\n                        this.switchFocus();\n                    } else {\n                        findNextSection();\n                    }\n                }\n                break;\n            case 'left':\n                if (this.focusSection.axis.x > 0) {\n                    this.focusSection.axis.x -= 1;\n                    this.switchFocus();\n                } else {\n                    if (nextRow) {\n                        //X 좌표의 마지막 항목에서 바로 아래 리스트 첫번째 항목으로 이동\n                        if (this.focusSection.axis.y > 0) {\n                            this.focusSection.axis.y -= 1;\n                            this.focusSection.axis.x = this.focusSection.items[this.focusSection.axis.y].length - 1;\n                            this.switchFocus();\n                        }\n                    // } else if (loop) {\n                    //     //X 좌표의 마지막 항목에서 현재 리스트 첫번째 항목으로 이동\n                    //     this.focusSection.axis.x = this.focusSection.items[this.focusSection.axis.y].length - 1;\n                    //     this.switchFocus();\n                    } else {\n                        findNextSection();\n                    }\n                }\n                break;\n            case 'down':\n                if (this.focusSection.axis.y < this.focusSection.items.length - 1) {\n                    this.focusSection.axis.y += 1;\n                    this.switchFocus();\n                } else {\n                    findNextSection();\n                }\n                break;\n            case 'up':\n                if (this.focusSection.axis.y > 0) {\n                    this.focusSection.axis.y -= 1;\n                    this.switchFocus();\n                } else {\n                    findNextSection();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default new Navigation();","import React, {useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {CONSTANTS, Navigation, History}  from '../../app/';\n\nif (CONSTANTS.RESOLUTION_FHD) {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/launcher_fhd.css');\n} else {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/launcher_hd.css');\n}\n\nconst Launcher = () => {\n    //redux 예제\n    const launcher = useSelector(state => state.launcherExample);\n    \n    const [close, setClose] = useState({});\n    \n    useEffect(() => {\n        //redux 예제\n        console.log(launcher);\n        \n        Navigation.set({\n            id: 'launcher',\n            sections: [\n                {\n                    id: 'launcher-search',\n                    direction: {\n                        right: {\n                            id: 'launcher-profile'\n                        },\n                        down() {\n                            setClose({\n                                state: true,\n                                direction: 'down'\n                            });\n                        }\n                    },\n                    back() {\n                        setClose({\n                            state: true,\n                            direction: 'back'\n                        });\n                    }\n                },\n                {\n                    id: 'launcher-profile',\n                    direction: {\n                        left: {\n                            id: 'launcher-search'\n                        },\n                        right: {\n                            id: 'launcher-watching'\n                        },\n                        down() {\n                            setClose({\n                                state: true,\n                                direction: 'down'\n                            });\n                        }\n                    },\n                    back() {\n                        setClose({\n                            state: true,\n                            direction: 'back'\n                        });\n                    }\n                },\n                {\n                    id: 'launcher-watching',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    direction: {\n                        left: {\n                            id: 'launcher-profile'\n                        },\n                        right: {\n                            id: 'launcher-recommend'\n                        },\n                        down() {\n                            setClose({\n                                state: true,\n                                direction: 'down'\n                            });\n                        }\n                    },\n                    focus(section) {\n                        launcherSliding(section, 'launcher-slide');\n                    },\n                    back() {\n                        setClose({\n                            state: true,\n                            direction: 'back'\n                        });\n                    }\n                },\n                {\n                    id: 'launcher-recommend',\n                    direction: {\n                        left: {\n                            id: 'launcher-watching'\n                        },\n                        down() {\n                            setClose({\n                                state: true,\n                                direction: 'down'\n                            });\n                        }\n                    },\n                    focus(section) {\n                        launcherSliding(section, 'launcher-slide');\n                    },\n                    back() {\n                        setClose({\n                            state: true,\n                            direction: 'back'\n                        });\n                    }\n                }\n            ]\n        });\n    }, []);\n \n    /**\n     * 런처 슬라이딩\n     * 구조적인 문제로 공통 모듈 불가\n     * @param section\n     * @param target\n     */\n    const launcherSliding = (section, target) => {\n        const viewport = window.innerWidth;\n        const container = document.getElementById(target);\n        const containerX = parseInt(window.getComputedStyle(container).transform.split(',')[4].trim()); //container translateX\n        const center = viewport / 2 + container.offsetLeft; //중앙 기준선\n\n        const parent = document.getElementById(section.id);\n        const parentWidth = parent.getBoundingClientRect().width;\n        const parentX = parent.offsetLeft;\n        \n        const item = section.focusItem.getBoundingClientRect();\n        const itemX = item.left;\n        const itemWidth = item.width;\n        const distance = center - Math.floor(itemX + itemWidth / 2); //이동 거리\n        \n        if (itemX + itemWidth / 2 > center) {\n            if (section.items[section.axis.y][section.items[section.axis.y].length-1].getBoundingClientRect().left > viewport) {\n                container.style.transform = `translateX(${containerX + distance}px)`;\n            } else {\n                container.style.transform = `translateX(-${parentWidth - (viewport - parentX)}px)`;\n            }\n        } else {\n            if (Math.abs(containerX) < Math.abs(distance) || section.axis.x === 0) {\n                container.style.transform = `translateX(0)`;\n            } else {\n                container.style.transform = `translateX(${containerX + distance}px)`;\n            }\n        }\n    };\n    \n    const closeCallback = () => {\n        if (close.direction === 'down') {\n            return History.push('/home', {test: 1});\n        } else if (close.direction === 'back') {\n            console.log('런처종료')\n        }\n    }\n    \n    return (\n        <div className={`launcher-container ${close.state ? 'close' : ''}`} onTransitionEnd={() => closeCallback()}>\n        \n            <div className=\"launcher-slide\" id=\"launcher-slide\" style={{transform: 'translateX(0)'}}>\n            \n                <div className=\"launcher-search\" id=\"launcher-search\">\n                    <div>검색</div>\n                </div>\n            \n                <div className=\"launcher-profile\" id=\"launcher-profile\">\n                    <div>\n                        <div className=\"ic-profile ic-profile-default1\" />\n                        <div className=\"launcher-profile-coupon\">33</div>\n                        <div className=\"launcher-profile-nick\">프로필명</div>\n                    </div>\n                </div>\n            \n                <div className=\"launcher-contents launcher-contents-watching\">\n                    <h2>시청 중인 영상</h2>\n                    <ul id=\"launcher-watching\">\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                                <div className=\"poster-component\">\n                                    <ul className=\"poster-tag\">\n                                        <li className=\"poster-tag-device\"><span\n                                            className=\"view-all\">U+모바일tv로 시청가능</span></li>\n                                        <li className=\"poster-tag-device\"><span className=\"view-mobile\">모바일</span></li>\n                                        <li className=\"poster-tag-age\">전체</li>\n                                        <li className=\"poster-tag-age\"><strong>19</strong></li>\n                                    </ul>\n                                    <dl className=\"poster-time\">\n                                        <dt>11시간 20분 남음</dt>\n                                        <dd className=\"poster-remaining\"><span style={{width: \"50%\"}}/></dd>\n                                    </dl>\n                                </div>\n                                <div className=\"poster-title\">이태원 클라쓰 10화</div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            \n                <div className=\"launcher-contents launcher-contents-recommend\">\n                    <h2>추천 영상</h2>\n                    <ul id=\"launcher-recommend\">\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"poster-horizontal\">\n                                <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n        \n            </div>\n        \n            <div className=\"launcher-indicator-home\">홈으로 이동</div>\n    \n        </div>\n    )\n}\n\nexport default Launcher;\n","import {domain, http} from './index'\n\nconst apiMIMS = {\n    /**\n     * Main Panel 연동 정보 조회\n     * @param callback\n     * @returns {Promise<void>}\n     */\n    async getMainPanelInterlockingInfo(callback) {\n        const base = {\n            sa_id: '500148205865',\n            stb_mac: '8c6d.5088.f2f0',\n            app_type: 'UX',\n            panel_id: 'CP61',\n        };\n        \n        const response = await http.get(`${domain.MIMS}/getMainPanelInterlockingInfo`, {\n            headers: {\n                Accept: 'application/json'\n            },\n            params: base\n        });\n        \n        callback(response);\n    }\n};\n\nexport default apiMIMS;\n","import dayjs from 'dayjs';\n\nimport {domain, http, converter} from './index'\n\nconst apiIMCS = {\n    /**\n     * VOD 리스트\n     * @param params\n     * @param cache\n     * @param callback\n     * @returns {Promise<void>}\n     */\n    async getVodList(params, cache = false, callback) {\n        const base = {\n            CMD: 'getI30List'\n        };\n        \n        const response = await http.get(domain.IMCS, {\n            params: {...base, ...params},\n            cache, //cache 사용 여부\n        });\n        \n        const field = {\n            RESULT_TYPE: '',\n            ID: '',\n            NAME: '',\n            TYPE: '',\n            IMG_URL: '',\n            IMG_FILE_NAME: '',\n            PARENT_CAT_ID: '',\n            AUTH_YN: '',\n            CHA_NUM: '',\n            CAT_LEVEL: '',\n            PRICE_YN: '',\n            EXIST_SUB_CAT: '',\n            PR_INFO: '',\n            RUNTIME: '',\n            IS_51_CH: '',\n            IS_NEW: '',\n            IS_UPDATE: '',\n            IS_HOT: '',\n            IS_CAPTION: '',\n            IS_HD: '',\n            IS_CONTINOUS_PLAY: '',\n            POINT: '',\n            SUB_CNT: '',\n            CLOSE_YN: '',\n            SVOD_YN: '',\n            '3D_YN': '',\n            SERVICE_GB: '',\n            FILTER_GB: '',\n            PPS_YN: '',\n            CAT_DESC: '',\n            IS_ORDER: '',\n            NO_CACHE: '',\n            ANIMATION_IMG_FILE: '',\n            PPM_YN: '',\n            PPM_PROD_ID: '',\n            TEST_SBC: '',\n            POINT_COUNT: '',\n            POSTER_URL_NEW: '',\n            POSTER_IMG_URL: '',\n            IMG_FILE_NAME_H: '',\n            IMG_FILE_NAME_V: '',\n            POINT_I30: '',\n            PRICE: '',\n            IS_FH: '',\n            IS_CAT_FH: '',\n            IS_UHD: '',\n            IS_CAT_UHD: '',\n            NSC_GB: '',\n            WATCHA_POINT: '',\n            CINE_AVG_POINT: '',\n            CHANNEL_NUM: '',\n            SPECIAL_CAT_TYPE: '',\n            KIDS_GRADE: '',\n            CATEGORY_SUB_NAME: '',\n            ORDER_FLAG: '',\n            SER_ALBUM_ID: '',\n            NEW_IMAGE_URL: '',\n            MAIN_IMG_FILE: '',\n            LOGO_IMAGE_FILE: ''\n        };\n        \n        const data = converter(response.data, field);\n        \n        //추후 통합UI를 위한 별도 키 맵핑\n        const result = data.reduce((array, item) => {\n            array.push({\n                id: item.ID,\n                imgUrl: item.POSTER_IMG_URL,\n                imgName: item.IMG_FILE_NAME_H,\n                title: item.NAME\n            });\n            \n            return array;\n        }, [])\n        \n        callback(result);\n    },\n    /**\n     * VOD 상세\n     * @param params\n     * @param callback\n     * @returns {Promise<void>}\n     */\n    async getVodDetail(params, callback) {\n        const base = {\n            CMD: 'getNXContInfo'\n        };\n        \n        const response = await http.get(domain.IMCS, {\n            params: {...base, ...params}\n        });\n        \n        const field = {\n            FLAG: '',\n            MESSAGE: '',\n            POSTER_URL: '',\n            STILL_URL: '',\n            CONTS_IMAGE_URL: '',\n            CAPTION_URL: '',\n            VOD_SERVER1: '',\n            VOD_SERVER2: '',\n            VOD_SERVER3: '',\n            VOD_SERVER1_TYPE: '',\n            VOD_SERVER2_TYPE: '',\n            VOD_SERVER3_TYPE: '',\n            POSTER_URL_OLD: '',\n            SUPER_ALBUM_ID: '추가',\n            IPV6_VOD_SERVER1: '추가',\n            IPV6_VOD_SERVER2: '추가',\n            IPV6_VOD_SERVER3: '추가',\n            RESULT_TYPE: '',\n            ALBUM_ID: '',\n            ALBUM_NAME: '',\n            SERIES_DESC: '',\n            RUNTIME: '',\n            EVENT_INFO: '',\n            PR_INFO: '',\n            KIDS_GRADE: '',\n            SERVICE_GB: '',\n            TERR_YN: '',\n            TERR_ED_DATE: '',\n            ONAIR_DATE: '',\n            RELEASE_DATE: '',\n            COUNTRY: '',\n            DIRECTOR: '',\n            PRODUCER: '',\n            STARRING_ACTOR: '',\n            ACTOR: '',\n            VOICE_ACTOR: '',\n            STUDIO: '',\n            GENRE_LARGE: '',\n            GENRE_MID: '',\n            GENRE_SMALL: '',\n            IS_CAPTION: '',\n            SMI_LANGUAGE: '',\n            ADD_INFO_TYPE: '',\n            ADD_INFO: '',\n            SUMMARY1: '',\n            SUMMARY2: '',\n            PREVIEW_FLAG: '',\n            '2NDTV_RIGHT_YN': '',\n            IS_HDR: '',\n            IS_UHD: '',\n            IS_51_CH: '',\n            WATCHA_POINT: '',\n            WATCHA_COUNT: '',\n            COMMENT_CNT: '',\n            CINE21_ID: '',\n            CINE21_POINT: '',\n            CINE21_COUNT: '',\n            RESERVE_VIEW_DATE: '',\n            RESERVE_DELAY_YN: '',\n            POSTER_IMG_H: '',\n            POSTER_IMG_V: '',\n            POSTER_IMG_R: '',\n            STILL_IMAGE: '',\n            BACK_IMAGE: '',\n            LOGO_IMAGE: '',\n            GENRE_TYPE: '',\n            SUBTITLE: '',\n            UHD_YN: '추가',\n            CAPTION_YN: '추가',\n            DUBBING_YN: '추가',\n            INDEX_SVC_FLAG: '추가',\n            DOLBY_YN: '추가',\n            IMDB_YN: '추가',\n            IMDB_POINT: '추가',\n            //예고편\n            PREV_RESULT_TYPE: '',\n            ORIGIN_ALBUM_ID: '',\n            PREV_ALBUM_ID: '',\n            PREV_ALBUM_NAME: '',\n            PREV_RUNTIME: '',\n            PREV_STILL_IMAGE: '',\n            VOD_FILE_NAME: '',\n            VOD_FILE_SIZE: '',\n            CAP_FILE_NAME: '',\n            CAP_FILE_SIZE: ''\n        };\n        \n        const data = converter(response.data, field);\n        \n        //추후 통합UI를 위한 별도 키 맵핑\n        const result = data.reduce((array, item) => {\n            array.push({\n                imgUrl: item.CONTS_IMAGE_URL + item.BACK_IMAGE,\n                title: item.ALBUM_NAME,\n                release: dayjs(item.RELEASE_DATE).format('YYYY년 MM월 DD일'),\n                genre: item.GENRE_MID,\n                runtime: `${item.RUNTIME.substr(1, 1)}시간 ${item.RUNTIME.substr(2, 2)}분`,\n                actor: item.ACTOR,\n                director: item.PRODUCER,\n                summary: item.SUMMARY2\n            });\n            \n            return array;\n        }, [])\n        \n        callback(result[0]);\n    }\n}\n\nexport default apiIMCS;\n","import axios from \"axios\";\nimport {cacheAdapterEnhancer} from \"axios-extensions\";\nimport apiMIMS from './api.MIMS';\nimport apiIMCS from './api.IMCS';\n\n// IMCS 99 : 123.140.104.153:80\n// IMCS TB : 123.140.17.253:80\n// MIMS 99 : suxm99.uplus.co.kr:80\n// MIMS TB : mimstb.uplus.co.kr:80\n\n//setupProxy.js 에서 각 API 식별을 위한 prefix 분기용\nconst development = process.env.NODE_ENV === 'development';\nconst production = process.env.NODE_ENV === 'production';\n\n/**\n * API Domain\n */\nexport const domain = {\n    IMCS: `${development ? '/IMCS' : 'http://123.140.104.156'}/servlets/CommSvl_UTF8`,\n    // MIMS: `${development ? '/MIMS' : 'https://suxm.uplus.co.kr'}/smartux`\n    MIMS: 'https://suxm99.uplus.co.kr/smartux'\n}\n\n/**\n * API cache adapter\n */\nexport const http = axios.create({\n    baseUR: '/',\n    Accept: 'application/json',\n    headers: {'Cache-Control': 'no-cache'},\n    adapter: cacheAdapterEnhancer(\n        axios.defaults.adapter,\n        {enabledByDefault: false}\n    )\n});\n\n/**\n * string 형식의 API를 제공된 field 기준으로 컨버팅.\n * @param data\n * @param field\n * @returns {*[]}\n */\nexport const converter = (data, field) => {\n    //응답(response) 구분자 정보 - IMCS 연동규격서 공통정책 참조\n    //행: \\f, 열: |, 배열: \\b\n    \n    const limit = Object.keys(field).length;\n    const rows = data.split('\\f'); //행('\\f') 기준으로 1차 변환\n    \n    rows.pop(); //변환된 배열의 마지막 빈항목(\"\") 삭제\n    \n    return rows.map(row => {\n        //열('|') 기준 배열로 변환\n        const columns = row.substr(0, row.lastIndexOf('|')).split('|');\n        \n        return columns.reduce((result, value, index) => {\n            //제공된 field 이상의 값은 무시함.\n            if (index < limit) {\n                // 배열('\\b') 문자열이 포함 되어 있다면 배열로 변환\n                if (value.match('\\b') !== null) {\n                    value = value.split('\\b');\n                }\n                \n                result = {...result, [Object.keys(field)[index]] : value}\n            }\n            \n            return result;\n        }, {});\n    });\n};\n\nconst api = {\n    MINS: apiMIMS,\n    IMCS: apiIMCS\n};\n\nexport default api;","/**\n * 리스트 슬라이딩\n * @param prop\n * @param type\n * @param limit\n */\nexport const sliding = (prop, type, limit) => {\n    const parent = document.getElementById(prop.id);\n    const parentWidth = parent.clientWidth;\n    const focusItem = prop.focusItem;\n    const propStyle = window.getComputedStyle(focusItem);\n    const propMarginLeft = parseInt(propStyle.marginLeft);\n    const propMarginRight = parseInt(propStyle.marginRight);\n    const propWidth = focusItem.clientWidth + propMarginLeft + propMarginRight;\n    const propOffsetLeft = focusItem.getBoundingClientRect().left;\n    \n    /*\n        transition 효과 적용시 transition 끝나기 전\n        propOffsetLeft 계산 방지를 위해 절대값 으로 처리\n    */\n    \n    const pageType = () => {\n        let page = Math.floor(prop.axis.x / (parentWidth / propWidth));\n        parent.style.transform = `translateX(-${page * parentWidth}px)`;\n    };\n    \n    const singleType = (direction) => {\n        if (direction === 'next') {\n            let index = (prop.axis.x + 1) - (parentWidth / propWidth);\n            parent.style.transform = `translateX(-${index * propWidth}px)`;\n        } else {\n            parent.style.transform = `translateX(-${prop.axis.x * propWidth}px)`;\n        }\n    };\n    \n    switch (type) {\n        case 'single':\n            if (propOffsetLeft + propWidth > limit) {\n                singleType('next');\n            } else if (propOffsetLeft < 0) {\n                singleType('prev');\n            }\n            break;\n        case 'page':\n            pageType();\n            break;\n        default:\n            break;\n    }\n};\n\n/**\n * 타이머\n */\nexport const timer = {\n    const: {},\n    /**\n     * 타이머 설정\n     * @param name\n     * @param callback\n     * @param time\n     */\n    setTimer(name, callback, time = 300) {\n        this.clearTimer(name)\n        this.const[name] = setTimeout(callback, time)\n    },\n    /**\n     * 타이머 해제\n     * @param name\n     */\n    clearTimer(name) {\n        clearTimeout(this.const[name]);\n    }\n}","import React from \"react\";\n\nconst HomeAside = () => {\n    return (\n        <div className=\"home-aside\" id=\"home-aside\">\n            <div className=\"gnb\">\n                <ul className=\"gnb-main\" id=\"gnb-main\">\n                    <li className=\"gnb-search\">검색</li>\n                    <li className=\"gnb-home\">홈</li>\n                    <li className=\"gnb-month\">월정액관</li>\n                    <li className=\"gnb-movie\">영화/해외드라마</li>\n                    <li className=\"gnb-tv\">TV방송</li>\n                    <li className=\"gnb-ani\">애니</li>\n                    <li className=\"gnb-doc\">다큐</li>\n                    <li className=\"gnb-total\">전체메뉴</li>\n                    <li className=\"gnb-set\">설정</li>\n                    <li className=\"gnb-noti\">알림</li>\n                </ul>\n                {/*<ul className=\"gnb-sub\" id=\"home-aside-2depth\">*/}\n                {/*    <li className=\"gnb-search\">검색</li>*/}\n                {/*    <li>영화</li>*/}\n                {/*    <li>해외드라마</li>*/}\n                {/*    <li>TV방송</li>*/}\n                {/*    <li>애니메이션</li>*/}\n                {/*    <li>다큐/교양</li>*/}\n                {/*</ul>*/}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(HomeAside);","import React from \"react\";\n\nconst HomeHeader = () => {\n    return (\n        <div className=\"home-header\" id=\"home-header\">\n            <div className=\"home-header-profile\">\n                <ul id=\"home-profile\">\n                    <li>\n                        <div className=\"ic-profile ic-profile-default1\" />\n                        <div className=\"home-profile-coupon\">3</div>\n                        <div className=\"home-profile-nick\">나의유플러스</div>\n                    </li>\n                    <li>\n                        <div className=\"ic-profile ic-profile-default2\" />\n                    </li>\n                    <li>\n                        <div className=\"ic-profile ic-profile-default3\" />\n                    </li>\n                    <li>\n                        <div className=\"ic-profile ic-profile-default4\" />\n                    </li>\n                    <li>\n                        <div className=\"ic-profile ic-profile-default5\" />\n                    </li>\n                </ul>\n            </div>\n            <div className=\"home-header-apps\">\n                <ul id=\"home-apps\">\n                    <li className=\"home-header-apps-kids\">아이들나라</li>\n                    <li className=\"home-header-apps-netflix\">넷플릭스</li>\n                    <li className=\"home-header-apps-youtube\">유튜브</li>\n                    <li className=\"home-header-apps-tv\">TV앱스</li>\n                </ul>\n            </div>\n        </div>\n    )\n};\n\nexport default React.memo(HomeHeader);","import React from \"react\";\n\nconst PosterHorizontal = ({item}) => {\n    return (\n        <div className=\"poster-horizontal\">\n            <div className=\"poster-thumbnail\" style={{backgroundImage: `url(${item.imgUrl}/poster/${item.imgName}`}}>{item.title}</div>\n            {/*\n                API 에서 내려오는 데이터에서 live 일 경우 추가\n                <div className=\"poster-component\">\n                    <ul className=\"poster-tag\">\n                        <li className=\"poster-tag-device\"><span\n                            className=\"view-all\">U+모바일tv로 시청가능</span></li>\n                        <li className=\"poster-tag-device\"><span className=\"view-mobile\">모바일</span></li>\n                        <li className=\"poster-tag-age\">전체</li>\n                        <li className=\"poster-tag-age\"><strong>19</strong></li>\n                    </ul>\n                    <dl className=\"poster-time\">\n                        <dt>11시간 20분 남음</dt>\n                        <dd className=\"poster-remaining\"><span style={{width: \"50%\"}}/></dd>\n                    </dl>\n                </div>\n                <div className=\"poster-title\">이태원 클라쓰 10화</div>\n            */}\n        </div>\n    )\n}\n\nconst PosterVertical = ({item}) => {\n    return (\n        <div className=\"poster-horizontal\">\n            <div className=\"poster-thumbnail\" style={{backgroundImage: `url(${item.imgUrl}/poster/${item.imgName}`}}>{item.title}</div>\n        </div>\n    )\n}\n\nconst Poster = ({tag, type, item}) => {\n    const render = () => {\n        switch (type) {\n            //가로형\n            case 'horizontal':\n                return <PosterHorizontal item={item} />;\n            //세로형\n            case 'vertical':\n                return <PosterVertical item={item} />;\n        }\n    }\n    \n    return React.createElement(tag, {id: item.id}, render());\n}\n\nexport default Poster;","import React from \"react\";\n\nimport Poster from \"../../components/Poster\";\n\nconst HomeContents = (props) => {\n    return props.items.map((item, index) => {\n        return (\n            <section className=\"home-contents\" key={index}>\n                <h2>최신/인기 영화 {index+1}</h2>\n                {/* 전체 리-렌더링 위한 key 추가 */}\n                <ul id={`home-contents${index+1}`} key={item.id} style={{transform: 'translateX(0)'}}>\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                    <Poster tag={'li'} type={'horizontal'} item={item} />\n                </ul>\n            </section>\n        )\n    })\n}\n\nexport default React.memo(HomeContents);","import React, {useEffect, useState, useRef} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {Navigation, CONSTANTS, Portal, History} from '../../app/';\nimport api from \"../../api\";\nimport {utilUI} from '../../utils';\nimport HomeAside from './HomeAside';\nimport HomeHeader from './HomeHeader';\nimport HomeContents from './HomeContents';\n\nif (CONSTANTS.RESOLUTION_FHD) {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/home_fhd.css');\n} else {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/home_hd.css');\n}\n\nlet currentCategory = null;\n\nconst Home = () => {\n    const [homeContents, setHomeContents] = useState([]);\n    const [currentItem, setCurrentItem] = useState('');\n    const [activeGnb, setActiveGnb] = useState(false);\n    \n    const homeBody = useRef();\n    \n    //redux 예제\n    // const deviceInfo = useSelector(state => state.deviceInfo);\n    // const user = useSelector(state => state.userInfo);\n    // console.log(deviceInfo);\n    // console.log(user);\n    \n    //초기 Navigation 설정\n    useEffect(() => {\n        Navigation.set({\n            id: 'home',\n            sections: [\n                {\n                    id: 'home-profile',\n                    direction: {\n                        right: {\n                            id: 'home-apps'\n                        },\n                        down: {\n                            id: 'home-contents1'\n                        }\n                    },\n                    enter: (section) => {\n                        History.push('/my');\n                    },\n                    back: () => {\n                        History.back();\n                    }\n                },\n                {\n                    id: 'home-apps',\n                    direction: {\n                        left: {\n                            id: 'home-profile'\n                        },\n                        down: {\n                            id: 'home-contents1'\n                        }\n                    }\n                },\n                {\n                    id: 'gnb-main',\n                    options: {\n                        cols: 1\n                    },\n                    direction: {\n                        right: {\n                            id: 'home-contents1',\n                            selected: true\n                        }\n                    },\n                    entry: () => {\n                        setActiveGnb(true);\n                    },\n                    leave:() => {\n                        setActiveGnb(false);\n                    },\n                    focus: (section) => {\n                        if (currentCategory === section.focusItem) {\n                            utilUI.timer.clearTimer('gnbMain');\n                        } else {\n                            utilUI.timer.setTimer('gnbMain',() => {\n                                switch (section.axis.y) {\n                                    case 1:\n                                        getVodList('A900M');\n                                        break;\n                                    case 2:\n                                        getVodList('A9001');\n                                        break;\n                                    case 3:\n                                        getVodList('A9004');\n                                        break;\n                                    case 4:\n                                        getVodList('A9002');\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            });\n                            \n                            currentCategory = section.focusItem;\n                        }\n                    },\n                    back: () => {\n                        History.back();\n                    }\n                }\n            ]\n        });\n    \n        //홈 콤텐츠 최초 호출\n        getVodList('A900M');\n    }, []);\n    \n    //홈 콘텐츠 호출 후 Navigation 추가 설정\n    useEffect(() => {\n        let options = null;\n        let up = null;\n        let down = null;\n        \n        homeContents.forEach((list, index) => {\n            //첫번째 리스트 설정\n            if (index === 0) {\n                up = (section) => {\n                    if (section.prevSection && section.prevSection.down) {\n                        switch (section.prevSection.down.id) {\n                            case 'home-profile':\n                                Navigation.go('home-profile');\n                                break;\n                            case 'home-apps':\n                                Navigation.go('home-apps');\n                                break;\n                            default:\n                                break;\n                        }\n                    } else {\n                        Navigation.go('home-profile');\n                    }\n                }\n    \n                options = {\n                    loop: true,\n                    start: {y: 0, x: 0}\n                }\n            } else {\n                up = {\n                    id: `home-contents${index}`\n                }\n                \n                options = {\n                    loop: true\n                }\n            }\n            \n            //마지막 리스트 설정\n            if (index === homeContents.length - 1) {\n                down = {\n                    id: 'home-move-top'\n                }\n            } else {\n                down = {\n                    id: `home-contents${index+2}`\n                }\n            }\n            \n            Navigation.addSection('home', [\n                {\n                    id: `home-contents${index+1}`,\n                    options: options,\n                    direction: {\n                        left: {\n                            id: 'gnb-main'\n                        },\n                        up: up,\n                        down: down\n                    },\n                    entry: (section) => {\n                        Navigation.switchDirection('gnb-main', {\n                            right: {\n                                id: section.id,\n                                selected: true\n                            }\n                        });\n                        \n                        homeBody.current.style = `transition: .2s ease transform; transform: translateY(-${index * 253}px)`\n                    },\n                    focus: (section) => {\n                        //sliding\n                        if (!Navigation.prevent) {\n                            homeSliding(section);\n                        }\n                    },\n                    enter: (section) => {\n                        setCurrentItem(section.focusItem.dataset.id);\n                        \n                        Portal.mount('layer', 'title-portal', {\n                            id: currentItem\n                        });\n                    },\n                    back: () => {\n                        History.back();\n                    }\n                }\n            ]);\n        });\n        \n        Navigation.switchDirection('gnb-main', {\n            right: {\n                id: 'home-contents1',\n                selected: true\n            }\n        });\n        \n        //homeContents 렌더링 후 맨위로 버튼 nav 설정\n        Navigation.switchDirection('home-move-top', {\n            up: {\n                id: `home-contents${homeContents.length}`\n            }\n        });\n        \n        homeBody.current.style = 'transition: none; transform: translateY(0)';\n    }, [homeContents]);\n    \n    /**\n     * 콘텐츠 영역 슬라이딩\n     * @param section\n     */\n    const homeSliding = (section) => {\n        const container = document.getElementById(section.id);\n        const containerX = parseInt(getComputedStyle(container).transform.split(',')[4].trim());\n        const style = getComputedStyle(section.focusItem);\n        const distance = parseInt(style.width) + parseInt(style.marginRight);\n        const action = containerX < 0;\n        const axisX = section.axis.x;\n        const axisY = section.axis.y;\n        \n        switch (Navigation.key) {\n            case 'right':\n                const x = axisX === 0 ? section.items[axisY].length - 1 : axisX - 1;\n            \n                if (axisX === 0 && action) {\n                    Navigation.prevent = true; //transition 종료 전 키 입력 차단\n                \n                    container.style.cssText = `transition: .3s ease transform; transform: translateX(-${distance*2}px)`;\n                \n                    section.items[axisY][x].classList.add('dimmed');\n                } else if (axisX > 0) {\n                    Navigation.prevent = true; //transition 종료 전 키 입력 차단\n                \n                    container.style.cssText = action ?\n                        `transition: .3s ease transform; transform: translateX(-${distance*2}px)` :\n                        `transition: .3s ease transform; transform: translateX(-${distance}px)`;\n                \n                    section.items[axisY][x].classList.add('dimmed');\n                }\n            \n                break;\n            case 'left':\n                if (axisX === 0) {\n                    container.firstElementChild.classList.remove('dimmed');\n                    container.style.cssText = \"transition: .3s ease transform; transform: translateX(0)\";\n                } else {\n                    Navigation.prevent = true; //transition 종료 전 키 입력 차단\n                \n                    container.insertBefore(container.lastElementChild, container.firstChild);\n                    container.style.cssText = `transition: none; transform: translateX(-${distance*2}px)`;\n                \n                    container.firstElementChild.classList.add('dimmed');\n                    section.items[axisY][axisX].classList.remove('dimmed');\n                \n                    //insertBefore 및 위치값(distance*2) 조정 후 실행\n                    setTimeout(() => {\n                        container.style.cssText = `transition: .3s ease transform; transform: translateX(-${distance}px)`;\n                    }, 0)\n                }\n                break;\n            default:\n                break;\n        }\n    \n        container.ontransitionend = (event) => {\n            if (event.target.getAttribute('id') === section.id) { //이벤트 버블링 방지\n                if (Navigation.key === 'right') {\n                    if (axisX === 0) {\n                        for (let i = 0; i < 2; i++) {\n                            container.firstElementChild.classList.remove('dimmed');\n                            container.append(container.firstElementChild);\n                        }\n                    \n                        container.style.cssText = \"transition: none; transform: translateX(0)\";\n                    } else if (axisX > 1) {\n                        container.firstElementChild.classList.remove('dimmed');\n                        container.append(container.firstElementChild);\n                    \n                        container.style.cssText = `transition: none; transform: translateX(-${distance}px)`;\n                    }\n                }\n            \n                Navigation.prevent = false; //transition 종료 후 키 입력 차단 해제\n            }\n        }\n    };\n    \n    /**\n     * 콘텐츠 호출\n     * @param id\n     */\n    const getVodList = (id) => {\n        api.IMCS.getVodList({\n            PARAM: `SA_ID=500148205865|STB_MAC=8c6d.5088.f2f0|CAT_ID=${id}|DEFIN_FLAG=1|LEVEL_GB=B|CAT_GB=I30|ORDER_GB=I|NET_TYP=02|IS_UHD=Y|PAGE_NO=1|PAGE_CNT=10|PAGE_IDX=1|QUICK_DIS_YN=Y|FILTER_DATE=|WATCHA_POINT=|CINE_POINT=|PR_INFO=|PRICE=|PRODUCTION=|COUNTRY=|`\n        }, true, response => {\n            setHomeContents(response);\n        });\n    };\n    \n    return (\n        <div className={`home-container ${activeGnb ? 'active-gnb' : ''}`}>\n            <HomeAside/>\n            <div className=\"home-body\" ref={homeBody}>\n                <HomeHeader />\n                <HomeContents items={homeContents}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Navigation from \"../../app/Navigation\";\n\nconst Category = ({history}) => {\n    useEffect(() => {\n        Navigation.set({\n            id: 'category',\n            sections: [\n                {\n                    id: 'category-dummy',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    back() {\n                        history.goBack();\n                    }\n                }\n            ]\n        });\n    }, [history]);\n    \n    return (\n        <div id=\"category\">\n            <ul id=\"category-dummy\">\n                <li>카테고리 페이지</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Category;","import React, {useEffect} from 'react';\nimport {CONSTANTS, Portal, Navigation} from '../../app/';\n\nif (CONSTANTS.RESOLUTION_FHD) {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/title_fhd.css');\n} else {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/title_hd.css');\n}\n\nconst Title = ({params}) => {\n    const navigationId = 'title';\n    \n    useEffect(() => {\n        Navigation.createLayer({\n            id: navigationId,\n            sections: [\n                {\n                    id: 'contents-meta-options',\n                    direction: {\n                        down: {\n                            id: 'contents-poster-list'\n                        }\n                    },\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    enter: () => {\n                        Portal.mount('toast', 'toast-portal', {\n                            contents: '준비중 입니다.'\n                        })\n                    },\n                    back: () => {\n                        Portal.unmount(params.portalId);\n                    }\n                },\n                {\n                    id: 'contents-poster-list',\n                    direction: {\n                        up: {\n                            id: 'contents-meta-options'\n                        }\n                    },\n                    enter: () => {\n                        Portal.mount('modal', 'modal-portal', {\n                            title: '타이틀'\n                        })\n                    },\n                    back: () => {\n                        Portal.unmount(params.portalId);\n                    }\n                }\n            ]\n        });\n        \n        return() => {\n            //unmount 시 네비게이션 레이어 삭제\n            Navigation.removeLayer(navigationId);\n        }\n    }, []);\n\n    return (\n        <div id=\"title\">\n            <div className=\"contents-detail\">\n                <div className=\"contents-meta\">\n                    <h1>타이틀</h1>\n                    <ul>\n                        <li>2020-01-01</li>\n                        <li>액션</li>\n                        <li>1시간30분</li>\n                    </ul>\n                    <dl>\n                        <dt>출연</dt>\n                        <dd>출연배우</dd>\n                    </dl>\n                    <dl>\n                        <dt>감독</dt>\n                        <dd>감독이름</dd>\n                    </dl>\n                    <article>\n                        창고와 폐공장이 세트장으로? 대탈출3의 상상초월 세트 변천사\n                        공개. 탈출러들이 뽑은 올 시즌 최고의 에피소드. 미술감독이 직접 밝히는 세트의 놀라운 비\n                    </article>\n                    <div className=\"contents-meta-options\" id=\"contents-meta-options\">\n                        <button>시청하기</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"contents-poster-list\">\n                <ul id=\"contents-poster-list\">\n                    <li>\n                        <div className=\"poster-horizontal\">\n                            <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"poster-horizontal\">\n                            <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"poster-horizontal\">\n                            <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"poster-horizontal\">\n                            <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"poster-horizontal\">\n                            <div className=\"poster-thumbnail\" style={{backgroundImage: 'url(/poster.jpg)'}} />\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Title;","class History {\n    constructor() {\n        this.history = null;\n        this.historyArray = [];\n    }\n    \n    init(params) {\n        this.history = params;\n    }\n    \n    /**\n     * history push 발생 시 history 정보를 쌓는다\n     * @param path\n     */\n    stack(path) {\n        this.historyArray.push({\n            path: path\n        });\n    }\n    \n    /**\n     * history push\n     * @param path\n     * @param state\n     * @param native\n     */\n    push(path, state = {}, native) {\n        this.history.push(path, state);\n        \n        //native 요청 시 stack 중복 방지\n        if (!native) this.stack(path);\n    }\n    \n    /**\n     * historyArray 에서 마지막 항목을 삭제 후\n     * 이전 항목으로 replace\n     */\n    back() {\n        const history = this.historyArray;\n        \n        if (history.length > 1) {\n            history.splice(history.length-1, 1);\n            this.history.replace(history[history.length-1].path);\n        } else {\n            //앱 종료\n        }\n    }\n}\n\nexport default new History();","import {store} from '../app/';\nimport {setUserInfo} from \"../app/slice\";\nimport History from \"../app/History\";\n\nclass NativeSend {\n    send(method, data, callback) {\n        console.log(`[Native Receive]: ${method}`);\n        window.tvExt.ApexMessage.send(\"com.lguplus.iptv3.base.launcher\", method, data, function(response) {\n            callback(response);\n        });\n    }\n    \n    /**\n     * webUI 초기 화면로드 완료시 호출\n     * @param callback\n     */\n    onLoadedApp(callback) {\n        this.send('onLoadedApp', null, (response) => {\n            callback(response);\n        });\n    }\n    \n    /**\n     * UP의 특정 값 SET\n     * @param data\n     * @param callback\n     */\n    setUPData(data, callback) {\n        this.send('setUPData', data, (response) => {\n            store.dispatch(setUserInfo(response));\n        });\n    }\n    \n    /**\n     * 앱 전환 시 현재 히스토리 정보를 send\n     * @param data\n     */\n    setHistoryBack(data) {\n        const history = History.historyArray;\n        \n        //마지막 히스토리에 Navigation focus 정보 추가\n        Object.assign(history[history.length -1],{focus: data});\n        \n        console.log(history);\n        // this.send('setHistoryBack', data, (response) => {\n        //     console.log(response);\n        // });\n    }\n}\n\nexport default new NativeSend();","import React, {useEffect} from 'react';\nimport {Navigation, History} from \"../../app/\";\nimport NativeSend from \"../../native/NativeSend\"\n\nconst My = () => {\n    useEffect(() => {\n        Navigation.set({\n            id: 'my',\n            sections: [\n                {\n                    id: 'my-dummy',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    enter(section) {\n                        NativeSend.setHistoryBack(section);\n                    },\n                    back() {\n                        History.back();\n                    }\n                }\n            ]\n        });\n    }, []);\n    \n    return (\n        <div id=\"my\">\n            <ul id=\"my-dummy\">\n                <li>마이 페이지</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default My;","import React, {useEffect} from 'react';\nimport Navigation from \"../../app/Navigation\";\n\nconst Setting = ({history}) => {\n    useEffect(() => {\n        Navigation.set({\n            id: 'setting',\n            sections: [\n                {\n                    id: 'setting-dummy',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    back() {\n                        history.goBack();\n                    }\n                }\n            ]\n        });\n    }, [history]);\n    \n    return (\n        <div id=\"setting\">\n            <ul id=\"setting-dummy\">\n                <li>설정 페이지</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Setting;","import React, {useEffect} from 'react';\nimport Navigation from \"../../app/Navigation\";\nimport CONSTANTS from \"../../app/constants\";\n\nif (CONSTANTS.RESOLUTION_FHD) {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/schedule_fhd.css');\n} else {\n    // eslint-disable-next-line no-unused-expressions\n    import('../../assets/css/schedule_hd.css');\n}\n\nconst Schedule = ({history}) => {\n    useEffect(() => {\n        Navigation.set({\n            id: 'schedule',\n            sections: [\n                {\n                    id: 'schedule-dummy1',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    direction: {\n                        mode: 'offset',\n                        down: {\n                            id: 'schedule-dummy2'\n                        }\n                    }\n                },\n                {\n                    id: 'schedule-dummy2',\n                    direction: {\n                        mode: 'offset',\n                        up: {\n                            id: 'schedule-dummy1'\n                        },\n                        down: {\n                            id: 'schedule-dummy3'\n                        }\n                    }\n                },\n                {\n                    id: 'schedule-dummy3',\n                    direction: {\n                        mode: 'offset',\n                        up: {\n                            id: 'schedule-dummy2'\n                        }\n                    }\n                }\n            ]\n        });\n    }, [history]);\n    \n    return (\n        <div id=\"schedule\">\n            <div className=\"schedule-container\">\n                <ul id=\"schedule-dummy1\">\n                    <li style={{width: '30%'}}>00</li>\n                    <li style={{width: '20%'}}>01</li>\n                    <li style={{width: '50%'}}>02</li>\n                </ul>\n                <ul id=\"schedule-dummy2\">\n                    <li style={{width: '10%'}}>10</li>\n                    <li style={{width: '70%'}}>11</li>\n                    <li style={{width: '20%'}}>12</li>\n                </ul>\n                <ul id=\"schedule-dummy3\">\n                    <li style={{width: '30%'}}>20</li>\n                    <li style={{width: '30%'}}>21</li>\n                    <li style={{width: '40%'}}>22</li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Schedule;","import React from \"react\";\n\nimport Launcher from \"../features/launcher/Launcher\";\nimport Home from '../features/home/Home';\nimport Category from \"../features/category/Category\";\nimport Title from \"../features/title/Title\";\nimport My from \"../features/my/My\";\nimport Setting from \"../features/setting/Setting\";\nimport Schedule from \"../features/schedule/Schedule\";\n\nconst test = 'a';\n\nconst Routes = [\n    {\n        path: '/',\n        exact: true,\n        component: Launcher,\n    },\n    {\n        path: '/home',\n        render: () => {\n            if (test === 'a') {\n                return <Home />\n            }\n        }\n    },\n    {\n        path: '/category',\n        component: Category\n    },\n    {\n        path: '/title',\n        component: Title\n    },\n    {\n        path: '/my',\n        component: My\n    },\n    {\n        path: '/setting',\n        component: Setting\n    },\n    {\n        path: '/schedule',\n        component: Schedule\n    }\n]\n\nexport default Routes;","import React, {useEffect} from 'react';\nimport {Portal, Navigation} from \"../app/\";\n\n//native interface 테스트 중\nconst Toast = ({params}) => {\n    const navigationId = 'toast';\n    \n    useEffect(() => {\n        Navigation.createLayer({\n            id: navigationId,\n            sections: [\n                {\n                    id: 'test-toast',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    enter: () => {\n                        Portal.unmount(params.portalId);\n                    }\n                }\n            ]\n        });\n        \n        return() => {\n            //unmount 시 네비게이션 레이어 삭제\n            Navigation.removeLayer(navigationId);\n        }\n    }, []);\n    \n    return (\n        <div className=\"toast\" id=\"test-toast\">\n            <div>{params.contents}</div>\n        </div>\n    )\n};\n\nexport default Toast;","import React, {useEffect} from 'react';\nimport {Portal, Navigation} from '../app/';\n\nconst Modal = ({params}) => {\n    useEffect(() => {\n        const navigationId = 'modal';\n        \n        Navigation.createLayer({\n            id: navigationId,\n            sections: [\n                {\n                    id: 'test-scroll',\n                    direction: {\n                        up: () => {\n                            console.log('scroll up');\n                        },\n                        down: {\n                            id: 'test-field'\n                        }\n                    }\n                },\n                {\n                    id: 'test-field',\n                    direction: {\n                        up: {\n                            id: 'test-scroll'\n                        },\n                        down: {\n                            id: 'test-modal'\n                        }\n                    }\n                },\n                {\n                    id: 'test-modal',\n                    options: {\n                        start: {y: 0, x: 0}\n                    },\n                    direction: {\n                        up: {\n                            id: 'test-field'\n                        }\n                    },\n                    enter: (section) => {\n                        if (section.focusItem.id === 'cancel') {\n                            Portal.unmount(params.portalId);\n                        } else {\n                            Portal.mount('toast', 'toast-portal',{\n                                contents: '메시지'\n                            })\n                        }\n                    }\n                }\n            ]\n        });\n        \n        return() => {\n            //unmount 시 네비게이션 레이어 삭제\n            Navigation.removeLayer(navigationId);\n        }\n    }, []);\n    \n    return (\n        <div className=\"test-modal\">\n            <article>\n                <h2>{params.title}</h2>\n                <h3>스크롤 영역</h3>\n                <div id=\"test-scroll\">\n                    <div>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트<br/>\n                        스크롤 네비게이션 테스트\n                    </div>\n                </div>\n                <div id=\"test-field\">\n                    <input type=\"text\" placeholder=\"input 입력 테스트\"/>\n                </div>\n                <div id=\"test-modal\">\n                    <button id=\"confirm\">확인</button>\n                    <button id=\"cancel\">취소</button>\n                </div>\n            </article>\n        </div>\n    )\n};\n\nexport default Modal;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Toast from \"../components/Toast\";\nimport Modal from \"../components/Modal\";\nimport Title from \"../features/title/Title\";\n\nclass Portal {\n    /**\n     * 각 컴포넌트에서 요청한 팝업 마운트\n     * @param type\n     * @param id\n     * @param params\n     */\n    mount(type, id, params) {\n        //팝업 컴포넌트에 전달할 params 추가\n        params.portalType = type;\n        params.portalId = id;\n        \n        //한 레이어 (div id=\"layer\") 내 n개 팝업 마운트를 고려\n        //마운트 될 각각의 엘리먼트 생성\n        const container = document.createElement('div');\n        container.style.cssText = 'position: relative; height: 100%';\n        container.setAttribute('id', params.portalId);\n        document.getElementById(type).appendChild(container);\n   \n        switch (params.portalId) {\n            case 'toast-portal':\n                this.render(<Toast params={params} />, params.portalId)\n                break;\n            case 'modal-portal':\n                this.render(<Modal params={params} />, params.portalId);\n                break;\n            case 'title-portal':\n                this.render(<Title params={params} />, params.portalId);\n                break;\n            default:\n                break;\n        }\n    }\n    \n    /**\n     * 각 팝업에서 언마운트 요청\n     * @param id\n     */\n    unmount(id) {\n        const target = document.getElementById(id);\n        \n        //팝업 언마운트 후 this.mount() 에서 생성한 엘리먼트 삭제\n        ReactDOM.unmountComponentAtNode(target);\n        target.remove();\n    }\n    \n    /**\n     * 특정 영역에 컴포넌트 렌더링\n     * @param component\n     * @param id\n     */\n    render(component, id) {\n        ReactDOM.render(component, document.getElementById(id));\n    }\n}\n\nexport default new Portal();\n","import React from \"react\";\nimport {setDeviceInfo} from \"../app/slice\";\nimport {Portal, History, Navigation, store} from \"../app/\";\n\n//native interface 테스트 중\nconst nativeReceive = () => {\n    // window.tvExt.setOnCloseCallback((response) => {\n    //     console.log(response);\n    // });\n    // window.tvExt.setOnOpenCallback((response) => {\n    //     console.log(response);\n    // });\n    // window.tvExt.setSendCallback((response) => {\n    //     console.log(response);\n    // });\n\n    // window.tvExt.ApexMessage.addApexMessageListener('com.test.cloudtest', (method, response) => {\n    //     console.log(`[Native Receive]: ${method}`);\n    //\n    //     switch (method) {\n    //         case 'startWebApp': //App 실행\n    //             History.push('/home');\n    //             break;\n    //         case 'notifyInitData': //App 초기구동시 필요한 정보를 전달한다\n    //             store.dispatch(setDeviceInfo(response));\n    //             break;\n    //         case 'dispatchKeyEvent':\n    //             Navigation.receiveKey(response);\n    //             break;\n    //         default:\n    //             return;\n    //     }\n    // });\n\n    // window.tvExtTest = {\n    //     registerCallback: (method, response) => {\n    //         console.log(`[Native Receive]: ${method}`);\n    //\n    //         switch (method) {\n    //             case 'startWebApp': //App 실행\n    //\n    //\n    //                 //초기 구동시 히스토리백 정보를 세팅해서 보내준다면...\n    //                 if (response && response.historyBack) {\n    //                     const history = History.historyArray = response.historyBack;\n    //                     const lastHistory = history[history.length-1];\n    //\n    //                     //히스토리에 저장 되어 있는 마지막 항목으로 포커스 정보와 함께 이동\n    //                     History.push(lastHistory.path, {}, true);\n    //\n    //                     //네비게이션에 포커스 정보 저장\n    //                     Navigation.focusHistory = lastHistory.focus;\n    //                 } else {\n    //                     History.push('/launcher');\n    //                 }\n    //                 break;\n    //\n    //\n    //             case 'notifyInitData': //App 초기구동시 필요한 정보를 전달한다\n    //                 store.dispatch(setDeviceInfo(response));\n    //                 break;\n    //             case 'dispatchKeyEvent':\n    //                 Navigation.receiveKey(response);\n    //                 break;\n    //\n    //             case 'toast': //팝업 테스트\n    //                 Portal.mount('toast', 'toast-portal', response);\n    //                 break;\n    //             default:\n    //                 return;\n    //         }\n    //     }\n    // }\n}\n\nexport default nativeReceive;","import React, {useEffect} from 'react';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport {Routes, History} from './app/';\nimport nativeReceive from \"./native/nativeReceive\";\n\nconst App = () => {\n    const history = useHistory();\n\n    //초기 세팅\n    useEffect(() => {\n        //native 이벤트 리스너 등록\n        nativeReceive();\n        \n        //history 생성\n        History.init(history);\n    }, []);\n    \n    return (\n        <React.Fragment>\n            <Switch>\n                {Routes.map((route, index) => (\n                    <Route key={index} {...route} />\n                ))}\n            </Switch>\n            {/* Portal 통해 modal, toast 렌더링 */}\n            <div id=\"layer\" />\n            <div id=\"modal\" />\n            <div id=\"toast\" />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './app/store';\nimport App from './App';\nimport CONSTANTS from './app/constants';\nimport * as serviceWorker from './serviceWorker';\n\n(async() => {\n    if (CONSTANTS.RESOLUTION_FHD) {\n        await import('./assets/css/common_fhd.css');\n    } else {\n        await import('./assets/css/common_hd.css');\n    }\n    \n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <BrowserRouter basename={`/${process.env.REACT_APP_HOMEPAGE}`}>\n                    <App />\n                </BrowserRouter>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}